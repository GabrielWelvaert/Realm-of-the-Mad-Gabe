#include "tables.h"

/*
these maps, tables, vectors are used to access data associated with an enum
basically, this is a database.........
*/

std::unordered_map<int, SDL_Color> miniMapColors = {
    {{84}, miniMapGrass},
    {{04}, nexusFloor},
    {{44}, black},
    {{50}, udlFloor},
    {{16}, chickenFloor},
    {{52}, gordonLairFloor}

};

std::unordered_map<wallTheme, std::vector<std::vector<roomSpawn>>> wallThemeToMonsterSpawns = {
    {CHICKENLAIR,
    {
        {{1, TINYREDCHICKEN}, {1,TINYWHITECHICKEN}},
        {{.6, CYANTURKEY},{.6, YELLOWTURKEY},{.6, ORANGETURKEY}},
        {{.8, ROBOTURKEY}},
        {{.6, BIGTURKEY}, {.5, ROOSTER}},
        {{.6, BIGROOSTER}, {.5, ROOSTER}},
        {{1, COCKATRICE}, {.3, WHITECHICKEN}},
        {{.5, TINYREDCHICKEN}, {.5, TINYWHITECHICKEN}, {.5, WHITECHICKEN}},
        {{.5, ROOSTER}, {.5, CYANTURKEY}, {.5, WHITECHICKEN}, {.25, TINYREDCHICKEN}},
        {{1, COCKATRICE}, {.3, TINYREDCHICKEN}},
        {{.6, WHITECHICKEN}, {.5, ROOSTER}},
        {{.5, BIGTURKEY}, {.5, BIGROOSTER}},
        {{.6, CYANTURKEY},{.6, YELLOWTURKEY},{.6, ORANGETURKEY},{.2, MOUSE0}},
        {{.6, COCKATRICE}, {.3, WHITECHICKEN},{.2, MOUSE0}},
        {{.5, MOUSE0}, {.5, TINYWHITECHICKEN}},

        
    }},
    {UDL,
    {
        {{.2, SKELETON0},{.2, SKELETON1},{.3, SKELETON2},{.4, SKELETON3},{.2, SKELETON4},{.2, SKELETON5}},
        {{.4, SKELETON0},{.4, SKELETON1},{.4, SKELETON2},{.2, SKELETON3},{.2, SKELETON4}},
        {{.6, WHITEDEMON}, {.4, BAT0}},
        {{.6, WHITEDEMON}, {.2, REDKNIGHT0}, {.2, BAT0}},
        {{.4, IMP0},{.4, IMP1},{.4, IMP2},{.4, IMP3}},
        {{.6, HELLHOUND}, {.4, BAT0}},
        {{.3, SKELETON5}, {.2, BAT0}, {.4, SHATTERSBOMB}, {.2, SKELETON2}},
        {{.3, SKELETON5}, {.2, HELLHOUND}, {.4, SHATTERSBOMB}, {.2, IMP0}},
        {{.5, SHATTERSBOMB}, {.5, REDKNIGHT0}},
        {{.2, IMP2},{.2, SKELETON1},{.2, WHITEDEMON},{.4, BAT0},{.2, IMP0},{.4, SHATTERSBOMB}},
        {{.2, SKELETON0},{.2, SKELETON1},{.2, SKELETON2},{.2, IMP1},{.2, IMP2},{.2, IMP3}},
        {{.4, IMP0},{.4, IMP1},{.2, SKELETON4},{.2, SKELETON5}},
        {{.6, HELLHOUND}},
        {{.8, BAT0}, {.6,SKELETON2}, {.2,IMP2}},
        {{.4, HELLHOUND},{.4, WHITEDEMON}},

    }},
};

std::unordered_map<wallTheme, glm::vec2> wallThemeToSpawnPoint = {
    {NEXUS, {750,1575}},
    {VAULT, {750,700}},
    {GORDONSLAIRWALLTHEME, {515, 1040}}
};

std::vector<glm::vec2> vaultSpawns = {
    {600,550}, {750,550}, {900,550}
};

std::unordered_map<sprites, ItemTableComponentData> spriteEnumToItemTableComponentData = {
    {
        SKELETON0,
        {
            {
                {10, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {11, {T4BOW, T4SWORD, T4WAND}},
                {20, {HPPOT, MPPOT}}
            }
        }
    },
    {
        SKELETON1,
        {
            {
                {14, {T2TOME, T2QUIVER, T2HELM}},
                {19, {T3BOW, T3SWORD, T3WAND}},
                {18, {HPPOT, MPPOT}},
                {15, {T3HEAVYARMOR, T3ROBE, T3LIGHTARMOR}},
            }
        }
    },
    {
        SKELETON2,
        {
            {
                {15, {T4HEAVYARMOR, T4ROBE, T4LIGHTARMOR}},
                {16, {T4BOW, T4SWORD, T4WAND}},
                {17, {HPPOT, MPPOT}}
            }
        }
    },
    {
        SKELETON3,
        {
            {
                {15, {T5WAND, T5ROBE}},
                {14, {T3TOME}},
                {20, {HPPOT, MPPOT}}
            }
        }
    },
    {
        SKELETON4,
        {
            {
                {15, {T2ATTRING, T2WISRING, T2DEFRING, T2DEXRING, T2VITRING, T2HPRING, T2MPRING}},
                {17, {T6SWORD, T6BOW, T6WAND}},
                {18, {HPPOT, MPPOT}},
                {15, {T3HEAVYARMOR, T3ROBE, T3LIGHTARMOR}},
                {15, {T2HEAVYARMOR, T2ROBE, T2LIGHTARMOR}},
            }
        }
    },
    {
        REDKNIGHT0,
        {
            {
                {25, {FIREWATER, CABERNET}},
                {14, {T2ATTRING, T2WISRING, T2DEFRING, T2DEXRING, T2VITRING, T2HPRING, T2MPRING}},
                {17, {T5SWORD, T5WAND, T5BOW}},
                {10, {T6BOW,T6WAND,T6SWORD}}
            }
        }
    },
    {
        TINYWHITECHICKEN,
        {
            {
                {20, {HPPOT, MPPOT}},
                {8, {T0ATTRING, T0WISRING, T0DEFRING, T0DEXRING, T0VITRING, T0HPRING, T0MPRING}},
                {7, {T1SWORD, T1WAND, T1BOW}},
            }
        }
    },
    {
        TINYREDCHICKEN,
        {
            {
                {20, {HPPOT, MPPOT}},
                {7, {T0HEAVYARMOR, T0LIGHTARMOR, T0ROBE}},
            }
        }
    },
    {
        COCKATRICE,
        {
            {
                {19, {T2SWORD, T2BOW, T2WAND}},
                {12, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {11, {T2TOME, T2HELM, T2QUIVER}},
                {16, {HPPOT, MPPOT}},
                {2, {SNAKESKINARMOR}}
            }
        }
    },
    {
        WHITECHICKEN,
        {
            {
                {19, {T1SWORD, T1BOW, T1WAND}},
                {11, {T1TOME, T1HELM, T1QUIVER}},
                {16, {HPPOT, MPPOT}},
                {15, {T0HEAVYARMOR, T0LIGHTARMOR, T0ROBE}},
            }
        }
    },
    {
        ROOSTER,
        {
            {
                {15, {T1SWORD, T1BOW, T1WAND}},
                {4, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {15, {T1TOME, T1HELM, T1QUIVER}},
                {16, {HPPOT, MPPOT}},
                {5, {T0HEAVYARMOR, T0LIGHTARMOR, T0ROBE}},
            }
        }
    },
    {
        BIGROOSTER,
        {
            {
                {15, {T3SWORD, T3BOW, T3WAND}},
                {12, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {19, {T2HEAVYARMOR, T2LIGHTARMOR, T2ROBE}},
                {18, {HPPOT, MPPOT}},
                {5, {T0HEAVYARMOR, T0LIGHTARMOR, T0ROBE}},
            }
        }
    },
    {
        BIGTURKEY,
        {
            {
                {15, {T3SWORD, T3BOW, T3WAND}},
                {4, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {15, {T2TOME, T2HELM, T2QUIVER}},
                {14, {T2HEAVYARMOR, T2LIGHTARMOR, T2ROBE}},
                {18, {HPPOT, MPPOT}},
                {5, {T0HEAVYARMOR, T0LIGHTARMOR, T0ROBE}},
            }
        }
    },
    {
        BOSSCHICKEN,
        {
            {
                {100, {SPDPOT, DEXPOT}},
                {2, {CHICKENTOME, CHICKENSWORD}},
                {50, {CABERNET, FIREWATER}},
                {20, {T2ATTRING, T2WISRING, T2DEFRING, T2DEXRING, T2VITRING, T2HPRING, T2MPRING}},
                {21, {T4SWORD, T4WAND, T4BOW}},
                {22, {T4HEAVYARMOR, T4LIGHTARMOR, T4ROBE}},
                {24, {T2TOME, T2HELM, T2QUIVER}},
                {8, {T5HEAVYARMOR, T5LIGHTARMOR, T5ROBE}},
            }
        }
    },
    {
        ROBOTURKEY,
        {
            {
                {20, {T2HEAVYARMOR, T2LIGHTARMOR, T2ROBE}},
                {10, {HPPOT}},
                {18, {T2SWORD, T2BOW, T2WAND}},
                {19, {T1TOME, T1HELM, T1QUIVER}},
            }
        }
    },
    {
        ORANGETURKEY,
        {
            {
                {19, {T1TOME, T1HELM, T1QUIVER}},
                {16, {HPPOT}},
                {17, {T2HEAVYARMOR, T2LIGHTARMOR, T2ROBE}}
            }
        }
    },
    {
        YELLOWTURKEY,
        {
            {
                {15, {T1SWORD, T1BOW, T1WAND}},
                {19, {T1ATTRING, T1WISRING, T1DEFRING, T1DEXRING, T1VITRING, T1HPRING, T1MPRING}},
                {16, {MPPOT}}
            }
        }
    },
    {
        CYANTURKEY,
        {
            {
                {15, {T1SWORD, T1BOW, T1WAND}},
                {17, {T1TOME, T1HELM, T1QUIVER}},
                {16, {HPPOT, MPPOT}},
                {12, {T2TOME, T2HELM, T2QUIVER}},
            }
        }
    },
    {
        ARCMAGE,
        {
            {
                {24, {T3TOME, T3HELM, T3QUIVER}},
                {2, {TWILIGHTGEMSTONE,ARCWAND,ARCTOME,ARCROBE}},
                {1, {ARCWAND,ARCTOME,ARCROBE}},
                {100, {LIFEPOT}},
                {90, {DEFPOT, ATTPOT, WISPOT, VITPOT, MANAPOT}},
                {21, {T4TOME, T4HELM, T4QUIVER}},
                {20, {T4ATTRING, T4WISRING, T4DEFRING, T4DEXRING, T4VITRING, T4HPRING, T4MPRING, ATTACKPENDANT}},
                {24, {T8HEAVYARMOR, T8ROBE, T8LIGHTARMOR}},
                {27, {T8SWORD, T8BOW, T8WAND}},
                {22, {T9HEAVYARMOR, T9ROBE, T9LIGHTARMOR}},
                {29, {T9SWORD, T9BOW, T9WAND}},
                {5, {T10SWORD, T10BOW, T10WAND}},
                {4, {T10HEAVYARMOR, T10ROBE, T10LIGHTARMOR}},
            }
        }
    },
    {
        HELLHOUND,
        {
            {
                {17, {T3TOME, T3HELM, T3QUIVER}},
                {19, {T7SWORD, T7BOW, T7WAND}},
                {10, {T3HPRING, T3MPRING, T3ATTRING, T3WISRING, T3DEFRING, T3DEXRING, T3VITRING}},
                {15, {T6HEAVYARMOR, T6ROBE, T6LIGHTARMOR}},
            }
        }
    },
    {
        IMP0,
        {
            {
                {9, {HPPOT, MPPOT}},
                {15, {T5HEAVYARMOR, T5ROBE, T5LIGHTARMOR}},
                {1, {IMPBLADE, CABERNET}},
            }
        }
    },
    {
        IMP1,
        {
            {
                {9, {HPPOT, MPPOT}},
                {17, {T2TOME, T2HELM, T2QUIVER}},
                {19, {T5SWORD, T5BOW, T5WAND}},
                {1, {IMPBLADE, CABERNET}},
            }
        }
    },
    {
        IMP2,
        {
            {
                {9, {HPPOT}},
                {10, {T2ATTRING, T2WISRING, T2DEFRING, T2DEXRING, T2VITRING, T2HPRING, T2MPRING}},
                {1, {IMPBLADE, CABERNET}},
            }
        }
    },
    {
        IMP3,
        {
            {
                {9, {HPPOT, MPPOT}},
                {19, {T5SWORD, T5BOW, T5WAND}},
                {15, {T5HEAVYARMOR, T5ROBE, T5LIGHTARMOR}},
                {5, {T6HEAVYARMOR, T6ROBE, T6LIGHTARMOR}},
                {1, {IMPBLADE, CABERNET}},
            }
        }
    },
    {
        WHITEDEMON,
        {
            {
                {9, {HPPOT}},
                {15, {T7HEAVYARMOR, T7ROBE, T7LIGHTARMOR}},
                {17, {T8SWORD, T8BOW, T8WAND}},
                {14, {T3ATTRING, T3WISRING, T3DEFRING, T3DEXRING, T3VITRING, T3HPRING, T3MPRING}},
                {5, {ATTPOT}},
                {2, {ATTACKPENDANT}},
                {1, {T9SWORD, T9BOW, T9WAND}},
            }
        }
    },
    {
        SKELETON5,
        {
            {
                {30, {HPPOT}},
                {15, {T7HEAVYARMOR, T7ROBE, T7LIGHTARMOR}},
                {17, {T8SWORD, T8BOW, T8WAND}},
                {19, {T3TOME, T3HELM, T3QUIVER}},
            }
        }
    },
        {
        MOUSE0,
        {
            {
                {25, {MPPOT, HPPOT}},
            }
        }
    },
        {
        BAT0,
        {
            {
                {20, {HPPOT}},
                {10, {MPPOT}},
                {2, {CABERNET}},
                {1, {FIREWATER}},
            }
        }
    },
        {
        GORDON,
        {
            {
                {100, {LIFEPOT}},
                {99, {MANAPOT}},
                {75, {DEFPOT,SPDPOT,DEXPOT,VITPOT,WISPOT,ATTPOT}},
                {26, {T14WAND, T14BOW, T14SWORD}},
                {27, {T13WAND, T13BOW, T13SWORD}},
                {25, {T14LIGHTARMOR, T14HEAVYARMOR, T14ROBE}},
                {23, {T13LIGHTARMOR, T13HEAVYARMOR, T13ROBE}},
                {24, {T8QUIVER, T8TOME, T8HELM}},
                {20, {T7QUIVER, T7TOME, T7HELM}},
                {76, {T6HELM, T6TOME, T6TOME, T12WAND, T12BOW, T12SWORD, T12LIGHTARMOR, T12HEAVYARMOR, T12ROBE}},
                {77, {T5HELM, T5TOME, T5TOME, T11WAND, T11BOW, T11SWORD, T11LIGHTARMOR, T11HEAVYARMOR, T11ROBE}},
            }
        }
    },
        {
        SHEEP,
        {
            {
                {99, {HPPOT}},
                {10, {MPPOT}},
                {2, {CABERNET}},
                {1, {FIREWATER}},
            }
        }
    },
        {
        GIGASHEEP,
        {
            {
                {99, {HPPOT}},
                {20, {MPPOT}},
                {15, {CABERNET}},
                {5, {FIREWATER}},
            }
        }
    },
};

std::vector<std::vector<int>> gordonLairOnlyFloors = {
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,52,52,52,52,52,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
};

std::vector<std::vector<int>> gordonLair = {
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,42,42,42,42,42,42,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,42,42,42,02,02,02,02,42,42,42,42,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,42,02,02,02,52,52,52,52,02,02,02,42,42,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,42,02,52,52,52,52,52,52,52,52,52,52,02,42,42,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,42,02,52,52,52,52,52,52,52,52,52,52,52,52,02,42,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,42,02,52,52,52,52,52,52,52,52,52,52,52,52,52,52,02,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,02,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,02,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,42,52,52,52,52,52,52,52,52,52,52,52,52,52,52,42,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,02,42,52,52,52,52,52,52,52,52,52,52,52,52,42,02,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,02,42,52,52,52,52,52,52,52,52,52,52,42,02,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,02,42,42,42,52,52,52,52,42,42,42,02,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,02,02,02,42,42,42,42,02,02,02,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,02,02,02,02,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
    {44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,},
};

std::vector<std::vector<int>> nexusMapOnlyFloors = { // used to make mini map
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84}
};

std::vector<std::vector<int>> vaultMapOnlyFloors = { // used to make mini map
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,04,04,04,04,04,04,04,04,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
};

std::vector<std::vector<int>> vaultMap = {
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,35,35,35,35,35,35,35,35,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,05,05,05,05,05,05,05,05,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,35,35,35,35,35,35,35,35,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,05,05,05,05,05,05,05,05,05,05,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
};

std::vector<std::vector<int>> nexusMap = {
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,35,35,35,35,35,35,35,35,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,05,05,05,05,05,05,05,05,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,04,04,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,35,35,35,35,04,04,35,35,35,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,05,05,05,35,04,04,35,05,05,05,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,35,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,35,05,04,04,05,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,05,04,04,04,04,05,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,35,04,04,04,04,04,04,35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,05,35,35,35,35,35,35,05,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,05,05,05,05,05,05,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84},
    {84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84}
};

std::unordered_map<sprites, std::string> spriteToName = {
    {SKELETON0, std::string("Skeleton")},
    {SKELETON1, std::string("Skeleton Warrior")},
    {SKELETON2, std::string("Skeleton Knight")},
    {SKELETON3, std::string("Skeleton Mage")},
    {SKELETON4, std::string("Skeleton King")},
    {REDKNIGHT0, std::string("Red Knight")},
    {SHATTERSBOMB, std::string("Shatters Bomb")},
    {TINYWHITECHICKEN, std::string("Tiny White Chicken")},
    {TINYREDCHICKEN, std::string("Tiny Red Chicken")},
    {COCKATRICE, std::string("Cockatrice")},
    {WHITECHICKEN, std::string("White Chicken")},
    {ROOSTER, std::string("Rooster")},
    {BIGROOSTER, std::string("Big Rooster")},
    {BIGTURKEY, std::string("Big Turkey")},
    {BOSSCHICKEN, std::string("Boss Chicken")},
    {ROBOTURKEY, std::string("Robo-Turkey")},
    {ORANGETURKEY, std::string("Orange Turkey")},
    {YELLOWTURKEY, std::string("Yellow Turkey")},
    {CYANTURKEY, std::string("Cyan Turkey")},
    {ARCMAGE, std::string("Arc Mage")},
    {HELLHOUND, std::string("HellHound")},
    {IMP0, std::string("Imp")},
    {IMP1, std::string("Imp Warrior")},
    {IMP2, std::string("Imp Knight")},
    {IMP3, std::string("Imp Mage")},
    {WHITEDEMON, std::string("White Demon")},
    {SKELETON5, std::string("Lich")},
    {MOUSE0, std::string("Mouse")},
    {BAT0, std::string("Bat")},
    {GORDON, std::string("Chef Gordon Ramsay")},
    {SHEEP, std::string("Sheep")},
    {GIGASHEEP, std::string("Giga Sheep")},

};

// portal images
std::unordered_map<wallTheme, spritedata> wallThemeToSpriteData = {
    {UDL, {LOFIENVIRONMENT, 8, 8, {14*8,14*8,8,8}, 4, false, false}},
    {NEXUS, {LOFIENVIRONMENT, 8, 8, {6*8, 15*8,8,8}, 4, false, false}},
    {VAULT, {LOFIENVIRONMENT, 8, 8, {7*8,15*8,8,8}, 4, false, false}},
    {CHICKENLAIR, {LOFIENVIRONMENT, 8, 8, {14*8,14*8,8,8}, 4, false, false}},
    {CHANGECHAR, {LOFICHAR, 8, 8, {8*10,0,8,8}, 4, false, false}},
    {CHANGENAME, {LOFICHAR, 8, 8, {8*8,0,8,8}, 4, false, false}},
    {LOCKEDPORTALTHEME, {LOFIOBJ2, 8, 8, {8*10,8*11,8,8}, 4, false, false}},
    {GORDONSLAIRWALLTHEME, {LOFIENVIRONMENT, 8, 8, {14*8,14*8,8,8}, 4, false, false}},
};

std::unordered_map<std::string, textureEnums> PortalTitleToTexture = {
    {std::string("Chicken Lair"), CHICKENLAIRPORTAL},
    {std::string("Vault"), VAULTPORTAL},
    {std::string("Nexus"), NEXUSPORTAL},
    {std::string("Change Name"), CHANGENAMEPORTAL},
    {std::string("Change Character"), CHANGECHARPORTAL},
    {std::string("Castle"), CASTLEPORTAL},    
    {std::string("Gordon's Chamber"), GORDONSCHAMBERPORTAL},
    {std::string("???"), LOCKEDPORTAL},
};

std::unordered_map<wallTheme, textureEnums> wallThemeToPortalUITexture = {
    {VAULT, VAULTPORTAL},
    {NEXUS, NEXUSPORTAL},
    {CHANGENAME, CHANGENAMEPORTAL},
    {CHANGECHAR, CHANGECHARPORTAL},
    {CHICKENLAIR, CHICKENLAIRPORTAL},
    {UDL, CASTLEPORTAL},
    {GORDONSLAIRWALLTHEME, GORDONSCHAMBERPORTAL},
    {LOCKEDPORTALTHEME, LOCKEDPORTAL},  
};

std::unordered_map<wallTheme, glm::ivec2> wallThemeToFloor = {
    {NEXUS, {3,4}},
    {UDL, {5,0}},
    {VAULT, {3,4}},
    {CHICKENLAIR, {1,6}},
    {GORDONSLAIRWALLTHEME, {5,3}}
};

std::unordered_map<items, const char *> abillityItemToInfo = {
    {T0QUIVER, "slowing"},
    {T1QUIVER, "slowing"},
    {T2QUIVER, "slowing"},
    {T3QUIVER, "paralyzing"},
    {T4QUIVER, "paralyzing"},
    {T5QUIVER, "paralyzing"},
    {T6QUIVER, "paralyzing"},
    {T7QUIVER, "paralyzing"},
    {T8QUIVER, "paralyzing"},

};

std::unordered_map<items, const char *> consumableItemToInfo = {
    {HPPOT, "+100 HP"},
    {MPPOT, "+100 MP"},
    {ATTPOT, "+1 maximum Attack"},
    {DEFPOT, "+1 maximum Defense"},
    {DEXPOT, "+1 maximum Dexterity"},
    {SPDPOT, "+1 maximum Speed"},
    {WISPOT, "+1 maximum Wisdom"},
    {VITPOT, "+1 maximum Vitality"},
    {LIFEPOT, "+5 maximum HP"},
    {MANAPOT, "+5 maximum MP"},
    {CABERNET, "+150 HP"},
    {FIREWATER, "+230 HP"},
};

std::unordered_map<classes, startingEquipment> classesToStartingItems = {
    {ARCHER, {T0BOW, T0QUIVER}},
    {PRIEST, {T0WAND, T0TOME}},
    {WARRIOR, {T0SWORD, T0HELM}},
};

std::unordered_map<classes, const char*> classesToString = {
    {ROGUE, "Rogue"},
    {ARCHER, "Archer"},
    {WIZARD, "Wizard"},
    {PRIEST, "Priest"},
    {WARRIOR, "Warrior"},
    {KNIGHT, "Knight"},
    {PALADIN, "Paladin"},
    {ASSASSIN, "Assassin"},
    {NECROMANCER, "Necromancer"},
    {HUNTRESS, "Huntress"},
    {MYSTIC, "Mystic"},
    {TRICKSTER, "Trickster"},
    {SORCERER, "Sorcerer"}
};
//cooldown, mp cost
std::unordered_map<items, abilityData> itemEnumToAbilityData = { // cooldown and mp required
    {T0TOME, {500,60}},
    {T1TOME, {500,65}},
    {T2TOME, {500,70}},
    {T3TOME, {500,75}},
    {T4TOME, {500,80}},
    {T5TOME, {500,85}},
    {T6TOME, {500,85}},
    {T7TOME, {500,90}},
    {T8TOME, {500,95}},
    {ARCTOME, {500,150}},
    {T0QUIVER, {500,45}},
    {T1QUIVER, {500,50}},
    {T2QUIVER, {500,55}},
    {T3QUIVER, {500,60}},
    {T4QUIVER, {500,65}},
    {T5QUIVER, {500,70}},
    {T6QUIVER, {500,75}},
    {T7QUIVER, {500,80}},
    {T8QUIVER, {500,85}},
    {T0HELM, {3000,60}},
    {T1HELM, {4000,65}},
    {T2HELM, {4500,70}},
    {T3HELM, {5000,75}},
    {T4HELM, {5500,80}},
    {T5HELM, {6000,85}},
    {T6HELM, {6500,85}},
    {T7HELM, {7000,90}},
    {T8HELM, {7500,95}},
    {CHICKENTOME, {500, 112}}
};

std::unordered_map<items, helmData> itemEnumToHelmData = {
    { T0HELM, {3000} },
    { T1HELM, {4000} },
    { T2HELM, {4500} },
    { T3HELM, {5000} },
    { T4HELM, {5500} },
    { T5HELM, {6000} },
    { T6HELM, {6500} },
    { T7HELM, {7000} },
    { T8HELM, {7500} }
};

std::unordered_map<items, tomeData> itemEnumToTomeData = {
    {T0TOME, {100}},
    {T1TOME, {130}},
    {T2TOME, {165}},
    {T3TOME, {205}},
    {T4TOME, {250}},
    {T5TOME, {300}},
    {T6TOME, {300}},
    {T7TOME, {325}},
    {T8TOME, {350}},
    {CHICKENTOME, {212}},
    {ARCTOME, {150}},
};

std::unordered_map<items, quiverData> itemEnumToQuiverData = {
    {T0QUIVER, {80,120,LOFIPROJS,{8*2,8*7,8,8}, SLOWED}}, //red arrow
    {T1QUIVER, {140,180,LOFIPROJS,{8*2,8*7,8,8}, SLOWED}}, //red arrow
    {T2QUIVER, {120,220,LOFIPROJS,{8,8*7,8,8}, SLOWED}}, // green arrow 
    {T3QUIVER, {340,400,LOFIPROJS,{8*2,8*7,8,8}, PARALYZE}}, //purple arrow 
    {T4QUIVER, {440,540,LOFIPROJS,{8*2,8*7,8,8}, PARALYZE}}, //purple arrow 
    {T5QUIVER, {560,660,LOFIPROJS,{8*4, 8*7, 8, 8}, PARALYZE}}, // gold arrow
    {T6QUIVER, {675,775,LOFIPROJS,{8*3, 8*7, 8, 8}, PARALYZE}}, // blue 
    {T7QUIVER, {800,900,LOFIPROJS,{8*2,8*7,8,8}, PARALYZE}}, // red 
    {T8QUIVER, {975,1100,LOFIPROJS,{8,8*7,8,8}, PARALYZE}}, // green 
};

std::unordered_map<classes, BaseStatData> classToBaseStats = { // starting stats 
    {ARCHER, {130,100,12,0,12,12,12,10}},
    {WARRIOR, {200,100,15,0,7,10,10,10}},
    {PRIEST, {100,100,12,0,12,12,10,15}}
};
//hp == mp == attack == defense == speed == dexterity == vitality == wisdom
std::unordered_map<items, BaseStatData> itemEnumToStatData = {
    {TWILIGHTGEMSTONE, {0,110,0,6,6,0,0,0}},
    {SNAKESKINARMOR, {0,0,0,13,3,4,0,0}},
    {CHICKENTOME, {0,0,0,5,5,0,0,0}},
    {ARCTOME, {0,0,3,0,0,3,0,0}},
    {ARCROBE, {0,35,4,13,0,4,0,0}},
    {ADMINCROWN, {64000,64000,50,50,50,50,200,200}},
    {T0ATTRING, {0,0,3,0,0,0,0,0}},
    {T1ATTRING, {0,0,5,0,0,0,0,0}},
    {T2ATTRING, {0,0,6,0,0,0,0,0}},
    {T3ATTRING, {0,0,7,0,0,0,0,0}},
    {T4ATTRING, {0,0,8,0,0,0,0,0}},
    {T0DEFRING, {0,0,0,3,0,0,0,0}},
    {T1DEFRING, {0,0,0,5,0,0,0,0}},
    {T2DEFRING, {0,0,0,6,0,0,0,0}},
    {T3DEFRING, {0,0,0,7,0,0,0,0}},
    {T4DEFRING, {0,0,0,8,0,0,0,0}},
    {T0SPDRING, {0,0,0,0,3,0,0,0}},
    {T1SPDRING, {0,0,0,0,5,0,0,0}},
    {T2SPDRING, {0,0,0,0,6,0,0,0}},
    {T3SPDRING, {0,0,0,0,7,0,0,0}},
    {T4SPDRING, {0,0,0,0,8,0,0,0}},
    {T0VITRING, {0,0,0,0,0,0,3,0}},
    {T1VITRING, {0,0,0,0,0,0,5,0}},
    {T2VITRING, {0,0,0,0,0,0,6,0}},
    {T3VITRING, {0,0,0,0,0,0,7,0}},
    {T4VITRING, {0,0,0,0,0,0,8,0}},
    {T0WISRING, {0,0,0,0,0,0,0,3}},
    {T1WISRING, {0,0,0,0,0,0,0,5}},
    {T2WISRING, {0,0,0,0,0,0,0,6}},
    {T3WISRING, {0,0,0,0,0,0,0,7}},
    {T4WISRING, {0,0,0,0,0,0,0,8}},
    {T0DEXRING, {0,0,0,0,0,3,0,0}},
    {T1DEXRING, {0,0,0,0,0,5,0,0}},
    {T2DEXRING, {0,0,0,0,0,6,0,0}},
    {T3DEXRING, {0,0,0,0,0,7,0,0}},
    {T4DEXRING, {0,0,0,0,0,8,0,0}},
    {T0HPRING, {40,0,0,0,0,0,0,0}},
    {T1HPRING, {80,0,0,0,0,0,0,0}},
    {T2HPRING, {100,0,0,0,0,0,0,0}},
    {T3HPRING, {120,0,0,0,0,0,0,0}},
    {T4HPRING, {140,0,0,0,0,0,0,0}},
    {T0MPRING, {0,40,0,0,0,0,0,0}},
    {T1MPRING, {0,80,0,0,0,0,0,0}},
    {T2MPRING, {0,100,0,0,0,0,0,0}},
    {T3MPRING, {0,120,0,0,0,0,0,0}},
    {T4MPRING, {0,140,0,0,0,0,0,0}},
    {T0LIGHTARMOR, {0,0,0,5,0,0,0,0}},
    {T1LIGHTARMOR, {0,0,0,6,0,0,0,0}},
    {T2LIGHTARMOR, {0,0,0,7,0,0,0,0}},
    {T3LIGHTARMOR, {0,0,0,8,0,2,0,0}},
    {T4LIGHTARMOR, {0,0,0,9,0,2,0,0}},
    {T5LIGHTARMOR, {0,0,0,10,0,2,0,0}},
    {T6LIGHTARMOR, {0,0,0,12,0,2,0,0}},
    {T7LIGHTARMOR, {0,0,0,13,0,3,0,0}},
    {T8LIGHTARMOR, {0,0,0,14,0,3,0,0}},
    {T9LIGHTARMOR, {0,0,0,15,0,4,0,0}},
    {T10LIGHTARMOR, {0,0,0,16,0,4,0,0}},
    {T11LIGHTARMOR, {0,0,0,17,0,4,0,0}},
    {T12LIGHTARMOR, {0,0,0,17,0,5,0,0}},
    {T13LIGHTARMOR, {0,0,0,19,0,6,0,0}},
    {T14LIGHTARMOR, {0,0,0,21,0,7,0,0}},
    {T0HEAVYARMOR, {0,0,0,5,0,0,0,0}},
    {T1HEAVYARMOR, {0,0,0,6,0,0,0,0}},
    {T2HEAVYARMOR, {0,0,0,7,0,0,0,0}},
    {T3HEAVYARMOR, {0,0,0,8,0,0,0,0}},
    {T4HEAVYARMOR, {0,0,0,10,0,0,0,0}},
    {T5HEAVYARMOR, {0,0,0,12,0,0,0,0}},
    {T6HEAVYARMOR, {0,0,0,13,0,0,0,0}},
    {T7HEAVYARMOR, {0,0,0,15,0,0,0,0}},
    {T8HEAVYARMOR, {0,0,0,20,0,0,0,0}},
    {T9HEAVYARMOR, {0,0,0,21,0,0,0,0}},
    {T10HEAVYARMOR, {0,0,0,22,0,0,0,0}},
    {T11HEAVYARMOR, {0,0,0,23,0,0,0,0}},
    {T12HEAVYARMOR, {0,0,0,24,0,0,0,0}},
    {T13HEAVYARMOR, {0,0,0,26,0,0,0,0}},
    {T14HEAVYARMOR, {0,0,0,28,0,0,0,0}},
    {T0ROBE, {0,0,0,2,0,0,0,0}},
    {T1ROBE, {0,0,0,3,0,0,0,1}},
    {T2ROBE, {0,10,0,4,0,0,0,1}},
    {T3ROBE, {0,15,0,4,0,0,0,2}},
    {T4ROBE, {0,20,0,6,0,0,0,2}},
    {T5ROBE, {0,25,0,7,0,0,0,3}},
    {T6ROBE, {0,30,0,8,0,0,0,3}},
    {T7ROBE, {0,35,1,8,0,0,0,4}},
    {T8ROBE, {0,40,2,9,0,0,0,5}},
    {T9ROBE, {0,45,2,10,0,0,0,5}},
    {T10ROBE, {0,50,3,11,0,0,0,6}},
    {T11ROBE, {0,50,3,12,0,0,0,6}},
    {T12ROBE, {0,55,4,13,0,0,0,6}},
    {T13ROBE, {0,65,5,15,0,0,0,7}},
    {T14ROBE, {0,75,6,17,0,0,0,8}},
    {T0QUIVER, {0,0,0,0,0,0,0,0}},
    {T1QUIVER, {0,0,0,0,0,1,0,0}},
    {T2QUIVER, {0,0,0,0,0,2,0,0}},
    {T3QUIVER, {0,0,0,0,0,3,0,0}},
    {T4QUIVER, {0,0,0,0,0,4,0,0}},
    {T5QUIVER, {0,0,0,0,0,5,0,0}},
    {T6QUIVER, {0,0,0,0,0,6,2,2}},
    {T7QUIVER, {0,0,0,0,0,7,4,4}},
    {T8QUIVER, {0,0,0,0,0,8,8,8}},
    {T0TOME, {0,0,0,0,0,0,0,0}},
    {T1TOME, {0,0,0,0,0,0,0,0}},
    {T2TOME, {0,0,0,0,0,0,0,0}},
    {T3TOME, {0,0,0,0,0,0,0,0}},
    {T4TOME, {0,0,0,0,0,0,0,0}},
    {T5TOME, {0,0,0,0,0,0,0,0}},
    {T6TOME, {0,0,0,0,0,0,2,2}},
    {T7TOME, {0,0,0,0,0,0,4,4}},
    {T8TOME, {0,0,0,0,0,0,8,8}},
    {T0HELM, {0,0,0,2,0,0,0,0}},
    {T1HELM, {0,0,0,3,0,0,0,0}},
    {T2HELM, {0,0,0,4,0,0,0,0}},
    {T3HELM, {0,0,0,5,0,0,0,0}},
    {T4HELM, {0,0,0,6,0,0,0,0}},
    {T5HELM, {0,0,0,8,0,0,0,0}},
    {T6HELM, {0,0,0,10,0,0,2,2}},
    {T7HELM, {0,0,0,12,0,0,4,4}},
    {T8HELM, {0,0,0,14,0,0,8,8}},
    {ATTACKPENDANT, {80,0,6,0,0,0,0,0}},
};

// indexing with player classname returns valid item group for weapon slot, ability, armor! 
std::vector<groups> validWeapons = {SWORD,BOW,SWORD,WAND,SWORD,SWORD,SWORD,SWORD,SWORD,SWORD,SWORD,SWORD,SWORD};
std::vector<groups> validability = {QUIVER,QUIVER,QUIVER,TOME,HELM};
std::vector<groups> validarmor = {LIGHTARMOR, LIGHTARMOR, LIGHTARMOR, ROBE, HEAVYARMOR};

std::unordered_map<sprites, enemyCategory> spriteToEnemyCategory = {
    {SKELETON0, ASC},
    {SKELETON1, ASC},
    {SKELETON2, ASC},
    {SKELETON3, AS},
    {SKELETON4, ASC},
    {REDKNIGHT0, SC},
    {SHATTERSBOMB, T},
    {TINYWHITECHICKEN,SC},
    {TINYREDCHICKEN,SC},
    {COCKATRICE,SC},
    {WHITECHICKEN,ASC},
    {ROOSTER,AS},
    {BIGROOSTER,ASC},
    {BIGTURKEY,ASC},
    {BOSSCHICKEN,CHICKENBOSSAI},
    {ROBOTURKEY,ASC},
    {ORANGETURKEY,ASC},
    {YELLOWTURKEY,AS},  
    {CYANTURKEY,ASC},
    {ARCMAGE, ARCMAGEBOSSAI},
    {HELLHOUND,POUNCE},
    {IMP0,ASC},
    {IMP1,ASC},
    {IMP2,ASC},
    {IMP3,AS},
    {WHITEDEMON,ASC},
    {SKELETON5, AS},
    {MOUSE0, ASC},
    {BAT0, ASC},
    {GORDON, GORDONBOSSAI},
    {SHEEP, KEY},
    {GIGASHEEP, ASC}
};

std::unordered_map<items, textureEnums> itemToIconTexture = {
    {T0SWORD, T0SWORDICON},
    {T1SWORD, T1SWORDICON},
    {T2SWORD, T2SWORDICON},
    {T3SWORD, T3SWORDICON},
    {T4SWORD, T4SWORDICON},
    {T5SWORD, T5SWORDICON},
    {T6SWORD, T6SWORDICON},
    {T7SWORD, T7SWORDICON},
    {T8SWORD, T8SWORDICON},
    {T9SWORD, T9SWORDICON},
    {T10SWORD, T10SWORDICON},
    {T11SWORD, T11SWORDICON},
    {T12SWORD, T12SWORDICON},
    {T13SWORD, T13SWORDICON},
    {T14SWORD, T14SWORDICON},
    {IMPBLADE, IMPBLADEICON},
    {T0BOW, T0BOWICON},
    {T1BOW, T1BOWICON},
    {T2BOW, T2BOWICON},
    {T3BOW, T3BOWICON},
    {T4BOW, T4BOWICON},
    {T5BOW, T5BOWICON},
    {T6BOW, T6BOWICON},
    {T7BOW, T7BOWICON},
    {T8BOW, T8BOWICON},
    {T9BOW, T9BOWICON},
    {T10BOW, T10BOWICON},
    {T11BOW, T11BOWICON},
    {T12BOW, T12BOWICON},
    {T13BOW, T13BOWICON},
    {T14BOW, T14BOWICON},
    {T0WAND, T0WANDICON},
    {T1WAND, T1WANDICON},
    {T2WAND, T2WANDICON},
    {T3WAND, T3WANDICON},
    {T4WAND, T4WANDICON},
    {T5WAND, T5WANDICON},
    {T6WAND, T6WANDICON},
    {T7WAND, T7WANDICON},
    {T8WAND, T8WANDICON},
    {T9WAND, T9WANDICON},
    {T10WAND, T10WANDICON},
    {T11WAND, T11WANDICON},
    {T12WAND, T12WANDICON},
    {T13WAND, T13WANDICON},
    {T14WAND, T14WANDICON},
    {T0ATTRING, T0ATTRINGICON},
    {T1ATTRING, T1ATTRINGICON},
    {T2ATTRING, T2ATTRINGICON},
    {T3ATTRING, T3ATTRINGICON},
    {T4ATTRING, T4ATTRINGICON},
    {T0DEFRING, T0DEFRINGICON},
    {T1DEFRING, T1DEFRINGICON},
    {T2DEFRING, T2DEFRINGICON},
    {T3DEFRING, T3DEFRINGICON},
    {T4DEFRING, T4DEFRINGICON},
    {T0SPDRING, T0SPDRINGICON},
    {T1SPDRING, T1SPDRINGICON},
    {T2SPDRING, T2SPDRINGICON},
    {T3SPDRING, T3SPDRINGICON},
    {T4SPDRING, T4SPDRINGICON},
    {T0VITRING, T0VITRINGICON},
    {T1VITRING, T1VITRINGICON},
    {T2VITRING, T2VITRINGICON},
    {T3VITRING, T3VITRINGICON},
    {T4VITRING, T4VITRINGICON},
    {T0WISRING, T0WISRINGICON},
    {T1WISRING, T1WISRINGICON},
    {T2WISRING, T2WISRINGICON},
    {T3WISRING, T3WISRINGICON},
    {T4WISRING, T4WISRINGICON},
    {T0DEXRING, T0DEXRINGICON},
    {T1DEXRING, T1DEXRINGICON},
    {T2DEXRING, T2DEXRINGICON},
    {T3DEXRING, T3DEXRINGICON},
    {T4DEXRING, T4DEXRINGICON},
    {T0HPRING, T0HPRINGICON},
    {T1HPRING, T1HPRINGICON},
    {T2HPRING, T2HPRINGICON},
    {T3HPRING, T3HPRINGICON},
    {T4HPRING, T4HPRINGICON},
    {T0MPRING, T0MPRINGICON},
    {T1MPRING, T1MPRINGICON},
    {T2MPRING, T2MPRINGICON},
    {T3MPRING, T3MPRINGICON},
    {T4MPRING, T4MPRINGICON},
    {T0LIGHTARMOR, T0LIGHTARMORICON},
    {T1LIGHTARMOR, T1LIGHTARMORICON},
    {T2LIGHTARMOR, T2LIGHTARMORICON},
    {T3LIGHTARMOR, T3LIGHTARMORICON},
    {T4LIGHTARMOR, T4LIGHTARMORICON},
    {T5LIGHTARMOR, T5LIGHTARMORICON},
    {T6LIGHTARMOR, T6LIGHTARMORICON},
    {T7LIGHTARMOR, T7LIGHTARMORICON},
    {T8LIGHTARMOR, T8LIGHTARMORICON},
    {T9LIGHTARMOR, T9LIGHTARMORICON},
    {T10LIGHTARMOR, T10LIGHTARMORICON},
    {T11LIGHTARMOR, T11LIGHTARMORICON},
    {T12LIGHTARMOR, T12LIGHTARMORICON},
    {T13LIGHTARMOR, T13LIGHTARMORICON},
    {T14LIGHTARMOR, T14LIGHTARMORICON},
    {T0HEAVYARMOR, T0HEAVYARMORICON},
    {T1HEAVYARMOR, T1HEAVYARMORICON},
    {T2HEAVYARMOR, T2HEAVYARMORICON},
    {T3HEAVYARMOR, T3HEAVYARMORICON},
    {T4HEAVYARMOR, T4HEAVYARMORICON},
    {T5HEAVYARMOR, T5HEAVYARMORICON},
    {T6HEAVYARMOR, T6HEAVYARMORICON},
    {T7HEAVYARMOR, T7HEAVYARMORICON},
    {T8HEAVYARMOR, T8HEAVYARMORICON},
    {T9HEAVYARMOR, T9HEAVYARMORICON},
    {T10HEAVYARMOR, T10HEAVYARMORICON},
    {T11HEAVYARMOR, T11HEAVYARMORICON},
    {T12HEAVYARMOR, T12HEAVYARMORICON},
    {T13HEAVYARMOR, T13HEAVYARMORICON},
    {T14HEAVYARMOR, T14HEAVYARMORICON},
    {T0ROBE, T0ROBEICON},
    {T1ROBE, T1ROBEICON},
    {T2ROBE, T2ROBEICON},
    {T3ROBE, T3ROBEICON},
    {T4ROBE, T4ROBEICON},
    {T5ROBE, T5ROBEICON},
    {T6ROBE, T6ROBEICON},
    {T7ROBE, T7ROBEICON},
    {T8ROBE, T8ROBEICON},
    {T9ROBE, T9ROBEICON},
    {T10ROBE, T10ROBEICON},
    {T11ROBE, T11ROBEICON},
    {T12ROBE, T12ROBEICON},
    {T13ROBE, T13ROBEICON},
    {T14ROBE, T14ROBEICON},
    {T0QUIVER, T0QUIVERICON},
    {T1QUIVER, T1QUIVERICON},
    {T2QUIVER, T2QUIVERICON},
    {T3QUIVER, T3QUIVERICON},
    {T4QUIVER, T4QUIVERICON},
    {T5QUIVER, T5QUIVERICON},
    {T6QUIVER, T6QUIVERICON},
    {T7QUIVER, T7QUIVERICON},
    {T8QUIVER, T8QUIVERICON},
    {T0TOME, T0TOMEICON},
    {T1TOME, T1TOMEICON},
    {T2TOME, T2TOMEICON},
    {T3TOME, T3TOMEICON},
    {T4TOME, T4TOMEICON},
    {T5TOME, T5TOMEICON},
    {T6TOME, T6TOMEICON},
    {T7TOME, T7TOMEICON},
    {T8TOME, T8TOMEICON},
    {T0HELM, T0HELMICON},
    {T1HELM, T1HELMICON},
    {T2HELM, T2HELMICON},
    {T3HELM, T3HELMICON},
    {T4HELM, T4HELMICON},
    {T5HELM, T5HELMICON},
    {T6HELM, T6HELMICON},
    {T7HELM, T7HELMICON},
    {T8HELM, T8HELMICON},
    {ATTACKPENDANT, ATTACKPENDANTICON},
    {HPPOT, HPPOTICON},
    {MPPOT, MPPOTICON},
    {ATTPOT, ATTPOTICON},
    {DEFPOT, DEFPOTICON},
    {DEXPOT, DEXPOTICON},
    {SPDPOT, SPDPOTICON},
    {WISPOT, WISPOTICON},
    {VITPOT, VITPOTICON},
    {LIFEPOT, LIFEPOTICON},
    {MANAPOT, MANAPOTICON},
    {CABERNET, CABERNETICON},
    {FIREWATER, FIREWATERICON},
    {ADMINCROWN, ADMINCROWNICON},
    {CHICKENTOME, CHICKENTOMEICON},
    {SNAKESKINARMOR, SNAKESKINICON},
    {TWILIGHTGEMSTONE, TWILIGHTGEMSTONEICON},
    {CHICKENSWORD, CHICKENSWORDICON},
    {ARCTOME, ARCTOMEICON},
    {ARCROBE, ARCROBEICON},
    {ARCWAND, ARCWANDICON}
};

std::unordered_map<items, const char *> itemToName = {
    {T0SWORD, "Short Sword"},
    {T1SWORD, "Broad Sword"},
    {T2SWORD, "Saber"},
    {T3SWORD, "Long Sword"},
    {T4SWORD, "Falchion"},
    {T5SWORD, "Fire Sword"},
    {T6SWORD, "Glass Sword"},
    {T7SWORD, "Golden Sword"},
    {T8SWORD, "Ravenheart Sword"},
    {T9SWORD, "Dragonsoul Sword"},
    {T10SWORD, "Archon Sword"},
    {T11SWORD, "Skysplitter Sword"},
    {T12SWORD, "Sword of Acclaim"},
    {T13SWORD, "Sword of Splendor"},
    {T14SWORD, "Sword of Majesty"},
    {IMPBLADE, "Imp Blade"},
    {T0BOW, "Shortbow"},
    {T1BOW, "Reinforced Bow"},
    {T2BOW, "Crossbow"},
    {T3BOW, "Greywood Bow"},
    {T4BOW, "Ironwood Bow"},
    {T5BOW, "Fire Bow"},
    {T6BOW, "Double Bow"},
    {T7BOW, "Heavy Crossbow"},
    {T8BOW, "Golden Bow"},
    {T9BOW, "Verdant Bow"},
    {T10BOW, "Bow of Fey Magic"},
    {T11BOW, "Bow of Innocent Blood"},
    {T12BOW, "Bow of Covert Havens"},
    {T13BOW, "Bow of Mystical Energy"},
    {T14BOW, "Bow of Deep Enchantment"},
    {T0WAND, "Fire Wand"},
    {T1WAND, "Force Wand"},
    {T2WAND, "Power Wand"},
    {T3WAND, "Missile Wand"},
    {T4WAND, "Eldritch Wand"},
    {T5WAND, "Hell's Fire Wand"},
    {T6WAND, "Wand of Dark Magic"},
    {T7WAND, "Wand of Arcane Flame"},
    {T8WAND, "Wand of Death"},
    {T9WAND, "Wand of Deep Sorcery"},
    {T10WAND, "Wand of Shadow"},
    {T11WAND, "Wand of Ancient Warning"},
    {T12WAND, "Wand of Recompense"},
    {T13WAND, "Wand of Evocation"},
    {T14WAND, "Wand of Retribution"},
    {T0ATTRING, "Ring of Attack"},
    {T1ATTRING, "Ring of Greater Attack"},
    {T2ATTRING, "Ring of Superior Attack"},
    {T3ATTRING, "Ring of Paramount Attack"},
    {T4ATTRING, "Ring of Exalted Attack"},
    {T0DEFRING, "Ring of Defense"},
    {T1DEFRING, "Ring of Greater Defense"},
    {T2DEFRING, "Ring of Superior Defense"},
    {T3DEFRING, "Ring of Paramount Defense"},
    {T4DEFRING, "Ring of Exalted Defense"},
    {T0SPDRING, "Ring of Speed"},
    {T1SPDRING, "Ring of Greater Speed"},
    {T2SPDRING, "Ring of Superior Speed"},
    {T3SPDRING, "Ring of Paramount Speed"},
    {T4SPDRING, "Ring of Exalted Speed"},
    {T0VITRING, "Ring of Vitality"},
    {T1VITRING, "Ring of Greater Vitality"},
    {T2VITRING, "Ring of Superior Vitality"},
    {T3VITRING, "Ring of Paramount Vitality"},
    {T4VITRING, "Ring of Exalted Vitality"},
    {T0WISRING, "Ring of Wisdom"},
    {T1WISRING, "Ring of Greater Wisdom"},
    {T2WISRING, "Ring of Superior Wisdom"},
    {T3WISRING, "Ring of Paramount Wisdom"},
    {T4WISRING, "Ring of Exalted Wisdom"},
    {T0DEXRING, "Ring of Dexterity"},
    {T1DEXRING, "Ring of Greater Dexterity"},
    {T2DEXRING, "Ring of Superior Dexterity"},
    {T3DEXRING, "Ring of Paramount Dexterity"},
    {T4DEXRING, "Ring of Exalted Dexterity"},
    {T0HPRING, "Ring of Health"},
    {T1HPRING, "Ring of Greater Health"},
    {T2HPRING, "Ring of Superior Health"},
    {T3HPRING, "Ring of Paramount Health"},
    {T4HPRING, "Ring of Exalted Health"},
    {T0MPRING, "Ring of Magic"},
    {T1MPRING, "Ring of Greater Magic"},
    {T2MPRING, "Ring of Superior Magic"},
    {T3MPRING, "Ring of Paramount Magic"},
    {T4MPRING, "Ring of Exalted Magic"},
    {T0LIGHTARMOR, "Wolfskin Armor"},
    {T1LIGHTARMOR, "Leather Armor"},
    {T2LIGHTARMOR, "Basilisk Hide Armor"},
    {T3LIGHTARMOR, "Minotaur Hide Armor"},
    {T4LIGHTARMOR, "Bearskin Armor"},
    {T5LIGHTARMOR, "Chimera Hide Armor"},
    {T6LIGHTARMOR, "Wyvern Skin Armor"},
    {T7LIGHTARMOR, "Studded Leather Armor"},
    {T8LIGHTARMOR, "Drake Hide Armor"},
    {T9LIGHTARMOR, "Roc Leather Armor"},
    {T10LIGHTARMOR, "Hippogriff Hide Armor"},
    {T11LIGHTARMOR, "Griffon Hide Armor"},
    {T12LIGHTARMOR, "Hydra Skin Armor"},
    {T13LIGHTARMOR, "Wyrmhide Armor"},
    {T14LIGHTARMOR, "Leviathan Armor"},
    {T0HEAVYARMOR, "Iron Mail"},
    {T1HEAVYARMOR, "Chainmail"},
    {T2HEAVYARMOR, "Blue Steel Mail"},
    {T3HEAVYARMOR, "Silver Chainmail"},
    {T4HEAVYARMOR, "Golden Chainmail"},
    {T5HEAVYARMOR, "Plate Mail"},
    {T6HEAVYARMOR, "Mithril Chainmail"},
    {T7HEAVYARMOR, "Mithril Armor"},
    {T8HEAVYARMOR, "Dragonscale Armor"},
    {T9HEAVYARMOR, "Desolation Armor"},
    {T10HEAVYARMOR, "Vengeance Armor"},
    {T11HEAVYARMOR, "Abyssal Armor"},
    {T12HEAVYARMOR, "Acropolis Armor"},
    {T13HEAVYARMOR, "Dominion Armor"},
    {T14HEAVYARMOR, "Annihilation Armor"},
    {T0ROBE, "Robe of the Neophyte"},
    {T1ROBE, "Robe of the Apprentice"},
    {T2ROBE, "Robe of the Acolyte"},
    {T3ROBE, "Robe of the Student"},
    {T4ROBE, "Robe of the Conjurer"},
    {T5ROBE, "Robe of the Adept"},
    {T6ROBE, "Robe of the Invoker"},
    {T7ROBE, "Robe of the Illusionist"},
    {T8ROBE, "Robe of the Master"},
    {T9ROBE, "Robe of the Shadow Magus"},
    {T10ROBE, "Robe of the Moon Wizard"},
    {T11ROBE, "Robe of the Elder Warlock"},
    {T12ROBE, "Robe of the Grand Sorcerer"},
    {T13ROBE, "Robe of the Star Mother"},
    {T14ROBE, "Robe of the Ancient Intellect"},
    {T0QUIVER, "Magic Quiver"},
    {T1QUIVER, "Reinforced Quiver"},
    {T2QUIVER, "Iron Quiver"},
    {T3QUIVER, "Elvencraft Quiver"},
    {T4QUIVER, "Magesteel Quiver"},
    {T5QUIVER, "Golden Quiver"},
    {T6QUIVER, "Quiver of Elvish Mastery"},
    {T7QUIVER, "Quiver of the Autumn King"},
    {T8QUIVER, "Quiver of Gaia"},
    {T0TOME, "Healing Tome"},
    {T1TOME, "Remedy Tome"},
    {T2TOME, "Spirit Salve Tome"},
    {T3TOME, "Tome of Rejuvenation"},
    {T4TOME, "Tome of Renewing"},
    {T5TOME, "Tome of Divine Favor"},
    {T6TOME, "Tome of Holy Guidance"},
    {T7TOME, "Tome of Hallowed Language"},
    {T8TOME, "Tome of Sacred Thought"},
    {T0HELM, "Combat Helm"},
    {T1HELM, "Bronze Helm"},
    {T2HELM, "Black Iron Helm"},
    {T3HELM, "Red Iron Helm"},
    {T4HELM, "Steel Helm"},
    {T5HELM, "Golden Helm"},
    {T6HELM, "Helm of the Great General"},
    {T7HELM, "Helm of the Tribune"},
    {T8HELM, "Helm of Imperial Right"},
    {ATTACKPENDANT, "Attack Pendant"},
    {HPPOT, "Health Potion"},
    {MPPOT, "Magic Potion"},
    {ATTPOT, "Potion of Attack"},
    {DEFPOT, "Potion of Defense"},
    {DEXPOT, "Potion of Dexterity"},
    {SPDPOT, "Potion of Speed"},
    {WISPOT, "Potion of Wisdom"},
    {VITPOT, "Potion of Vitality"},
    {LIFEPOT, "Potion of Life"},
    {MANAPOT, "Potion of Mana"},
    {CABERNET, "Cabernet"},
    {FIREWATER, "Fire Water"},
    {ADMINCROWN, "Admin Crown"},
    {CHICKENTOME, "Poultry Codex"},
    {SNAKESKINARMOR, "Snakeskin Armor"},
    {TWILIGHTGEMSTONE, "The Twilight Gemstone"},
    {CHICKENSWORD, "Chicken Swing"},
    {ARCWAND, "ArcMage Wand"},
    {ARCTOME, "ArcMage Tome"},
    {ARCROBE, "ArcMage Robe"},
};

std::unordered_map<items, const char *> itemToDescription = {
    {SNAKESKINARMOR, "A tight fitting garment of snake skin that is both functional and stylish"},
    {CHICKENTOME, "This revered culinary scripture holds the closely guarded secrets of crafting perfect fried chicken, cherished by food enthusiasts and chicken connoisseurs alike."},
    {ADMINCROWN, "Super regal!"},
    {T0SWORD, "A steel short sword"},
    {T1SWORD, "A broad-bladed steel sword"},
    {T2SWORD, "A single-edged light sword"},
    {T3SWORD, "A well-made sword with a double edged blade"},
    {T4SWORD, "A single-edged broad-bladed sword"},
    {T5SWORD, "A fiery blade capable of burning flesh and bone"},
    {T6SWORD, "A sword formed from a single shard of unbreakable glass"},
    {T7SWORD, "A sharp sword plated with gold, clearly intended for the use of a great lord"},
    {T8SWORD, "A powerful sword infused with the spirit of dark rituals"},
    {T9SWORD, "A sword forged in a great volcano and consecrated with dragon magic"},
    {T10SWORD, "A sword pulsing with the powerful magic of ancient beings"},
    {T11SWORD, "An unfathomably powerful sword wielded by titanic air elementals in their great war of revolution"},
    {T12SWORD, "A great sword of recognition, forged by the gods for the champions of humankind"},
    {T13SWORD, "An exalted weapon of the august kings of old, hallowed with the spirit of nations and yearning to grant power anew"},
    {T14SWORD, "A gleaming obsidian sword of imperial power, fashioned by enslaved demons for the personal use of a world-conquering leader of mortals"},
    {IMPBLADE, "A slightly swift and somewhat hungry blade that is almost satisfied with just one kill"},
    {T0BOW, "A well-made shortbow"},
    {T1BOW, "An iron-reinforced bow"},
    {T2BOW, "A bow mounted on a stock that shoots with amazing speed and accuracy"},
    {T3BOW, "A bow made from the rare greywood tree"},
    {T4BOW, "A high-quality bow made of magical ironwood"},
    {T5BOW, "A bow that shoots arrows that burn with an unholy fire"},
    {T6BOW, "A bow that somehow manages to shoot two arrows in different directions"},
    {T7BOW, "A slow but powerful crossbow with a good grip"},
    {T8BOW, "A gilded bow gifted to mortals from the gods themselves"},
    {T9BOW, "A highly effective bow fashioned of still-living magical springwood"},
    {T10BOW, "A powerful bow crafted by dryads and blessed by the fey spirits of the woodlands"},
    {T11BOW, "A runed bow steeped in the dark power of ancient injustice"},
    {T12BOW, "A diamondwire bow used by guardians of the unseen ethereal shrines"},
    {T13BOW, "A superlative bow of sunsteel and diamondwire, created by a secretive race of star-dwelling entities"},
    {T14BOW, "A peerless triple bow crafted of nightmatter and diamondwire by the exalted bowyers of the primeval overgods"},
    {T0WAND, "A wand that casts a simple fire spell"},
    {T1WAND, "A wand that emits bolts of pure force"},
    {T2WAND, "A wand that fires power bolts"},
    {T3WAND, "A wand that casts a strong missile"},
    {T4WAND, "A wand that shoots dark eldritch energy"},
    {T5WAND, "A wand that casts a strong fire spell"},
    {T6WAND, "A wand that casts a bolt of pure magic force"},
    {T7WAND, "A deadly wand that channels magefire from the nether planes"},
    {T8WAND, "A fearsome wand that fires bolts of penetrating death magic"},
    {T9WAND, "A mysterious wand of otherworldly origin, imbued with the purest of arcane energies"},
    {T10WAND, "A wand of demonic enigmas, cloaked in darkness and crackling with dark enchantments"},
    {T11WAND, "A centuries-old wand of great power, heralding long-destined destruction"},
    {T12WAND, "A great golden wand of the heavens, created by angels to wreak justice on the slayers of the innocent"},
    {T13WAND, "A shining gold wand of force, built by a diabolic archmagus to channel vast corrupting energies into the material plane"},
    {T14WAND, "A golden wand of breathtaking power, created by elemental forces from the realms of ice and flame to unleash revenge on their enemies"},
    {T0ATTRING, "A spinel set in a silver ring"},
    {T1ATTRING, "A spinel set in a gold ring"},
    {T2ATTRING, "A large spinel set in a glittering gold ring"},
    {T3ATTRING, "A very large spinel set in a dazzling gold ring"},
    {T4ATTRING, "A huge, flawless spinel set in a stunningly beautiful gold ring"},
    {T0DEFRING, "An onyx set in a silver ring"},
    {T1DEFRING, "An onyx set in a gold ring"},
    {T2DEFRING, "A large onyx set in a glittering gold ring"},
    {T3DEFRING, "A very large onyx set in a dazzling gold ring"},
    {T4DEFRING, "A huge, flawless onyx set in a stunningly beautiful gold ring"},
    {T0SPDRING, "An emerald set in a silver ring"},
    {T1SPDRING, "An emerald set in a gold ring"},
    {T2SPDRING, "A large emerald set in a glittering gold ring"},
    {T3SPDRING, "A very large emerald set in a dazzling gold ring"},
    {T4SPDRING, "A huge, flawless emerald set in a stunningly beautiful gold ring"},
    {T0VITRING, "A ruby set in a silver ring"},
    {T1VITRING, "A ruby set in a gold ring"},
    {T2VITRING, "A large ruby set in a glittering gold ring"},
    {T3VITRING, "A very large ruby set in a dazzling gold ring"},
    {T4VITRING, "A huge, flawless ruby set in a stunningly beautiful gold ring"},
    {T0WISRING, "A sapphire set in a silver ring"},
    {T1WISRING, "A sapphire set in a gold ring"},
    {T2WISRING, "A large sapphire set in a glittering gold ring"},
    {T3WISRING, "A very large sapphire set in a dazzling gold ring"},
    {T4WISRING, "A huge, flawless sapphire set in a stunningly beautiful gold ring"},
    {T0DEXRING, "A citrine set in a silver ring"},
    {T1DEXRING, "A citrine set in a gold ring"},
    {T2DEXRING, "A large citrine set in a glittering gold ring"},
    {T3DEXRING, "A very large citrine set in a dazzling gold ring"},
    {T4DEXRING, "A huge, flawless citrine set in a stunningly beautiful gold ring"},
    {T0HPRING, "A topaz set in a silver ring"},
    {T1HPRING, "A topaz set in a gold ring"},
    {T2HPRING, "A large topaz set in a glittering gold ring"},
    {T3HPRING, "A very large topaz set in a dazzling gold ring"},
    {T4HPRING, "A huge, flawless topaz set in a stunningly beautiful gold ring"},
    {T0MPRING, "An amethyst set in a silver ring"},
    {T1MPRING, "An amethyst set in a gold ring"},
    {T2MPRING, "A large amethyst set in a glittering gold ring"},
    {T3MPRING, "A very large amethyst set in a dazzling gold ring"},
    {T4MPRING, "A huge, flawless amethyst set in a stunningly beautiful gold ring"},
    {T0LIGHTARMOR, "Leather armor fashioned from wolf pelts"},
    {T1LIGHTARMOR, "Armor made of hardened leather"},
    {T2LIGHTARMOR, "Leather armor made from the skin of a magical lizard"},
    {T3LIGHTARMOR, "Leather armor made from the tough hide of a minotaur"},
    {T4LIGHTARMOR, "Armor made from the thick leather of a dire bear"},
    {T5LIGHTARMOR, "Magically protective leather armor made from chimera hides"},
    {T6LIGHTARMOR, "Tough, durable armor made from wyvern leather"},
    {T7LIGHTARMOR, "Leather armor studded with metal rivets that provide extra protection"},
    {T8LIGHTARMOR, "Leather armor fashioned from the scaly skin of a firebreathing drake"},
    {T9LIGHTARMOR, "Leather armor made from the durable hide of a roc"},
    {T10LIGHTARMOR, "Leather armor made from the protective skin of hippogriffs"},
    {T11LIGHTARMOR, "Superior leather armor made from the magical hide of a griffon"},
    {T12LIGHTARMOR, "Superlative leather armor fashioned from the skin of a twelve-headed swamp hydra"},
    {T13LIGHTARMOR, "Outstanding leather armor made from the virtually impregnable hide of a great desert wyrm"},
    {T14LIGHTARMOR, "Magnificent leather armor made from the hide of the great leviathan, slain hundreds of years ago in a savage battle in the vast deeps"},
    {T0HEAVYARMOR, "Armor made from interlocking iron links"},
    {T1HEAVYARMOR, "Armor made from interlocking links of metal"},
    {T2HEAVYARMOR, "Mail made from blued steel"},
    {T3HEAVYARMOR, "Well-made chainmail plated with silver"},
    {T4HEAVYARMOR, "Well-made chainmail plated with gold, clearly intended for the use of a great lord"},
    {T5HEAVYARMOR, "Armor made from overlapping plates of metal"},
    {T6HEAVYARMOR, "Chainmail made with reinforcing mithril ribs"},
    {T7HEAVYARMOR, "Armor made from the strongest and most desirable of all metals"},
    {T8HEAVYARMOR, "Armor made from the scales of a full grown dragon"},
    {T9HEAVYARMOR, "Magical cold plate armor inscribed with tales of destruction and murder"},
    {T10HEAVYARMOR, "Tremendously strong plate armor shrouded by an aura of demonic revenge"},
    {T11HEAVYARMOR, "Mighty felplate armor designed for the most powerful of demon lords"},
    {T12HEAVYARMOR, "Indestructible magical armor made for the elite stoneborn champions of the eastern citadels"},
    {T13HEAVYARMOR, "Exquisitely decorated adamantine armor smithed by underdeep dwarves for the wardens of the demonclefts"},
    {T14HEAVYARMOR, "Impenetrable forceplate armor worn by the blackguard conquerors of the necromantic uprising"},
    {T0ROBE, "A long woolen robe favored by students of magic"},
    {T1ROBE, "A robe woven of rare yellow silk"},
    {T2ROBE, "A well-made robe of enchanted blue silk"},
    {T3ROBE, "A magical robe of faintly glowing wizardcloth"},
    {T4ROBE, "A magical robe of gray moonsilk"},
    {T5ROBE, "An enchanted robe of dark moonweave"},
    {T6ROBE, "A powerful robe of delicately embroidered red feythread"},
    {T7ROBE, "A silversilk robe masterfully sewn with morningdew spider threads"},
    {T8ROBE, "A beautiful and versatile robe of the lightest magethread"},
    {T9ROBE, "A highly decorated robe of purple wizardcloth, imbued with powers of sorcery and darkness"},
    {T10ROBE, "A robe of rarest moonsilk, enhanced long ago with deep nocturnal enchantments"},
    {T11ROBE, "A brightly colored robe of metallic threads, woven in the ancient elvish style and steeped in fey auras"},
    {T12ROBE, "A bloodweft robe adorned with rubies and firegarnets, worn by an ancient sect of masterful wizards"},
    {T13ROBE, "A robe of gossamer glowthread, used by the sorceress matriarchs of the western kingdoms"},
    {T14ROBE, "A phenomenal robe magically woven from fibers of sapphire, topaz and lapis lazuli, created for the archwizard of the seraphic realms"},
    {T0QUIVER, "A magical quiver that enchants arrows"},
    {T1QUIVER, "An enchanted quiver made of high-quality leather and brass"},
    {T2QUIVER, "A strong quiver of magical iron"},
    {T3QUIVER, "A powerful enchanting quiver made by forest elves"},
    {T4QUIVER, "A superior enchanting quiver made of high quality magesteel"},
    {T5QUIVER, "A quiver that shines with gold and pulses with the power of elvish archer spirits"},
    {T6QUIVER, "A forestcloth quiver of highest quality, exhibiting exceptional magic powers and used by the foremost masters of Elven archery"},
    {T7QUIVER, "A sun iron quiver passed through a royal elven lineage, whose legendary skills in archery have protected the Forest Kingdoms for millennia"},
    {T8QUIVER, "A treasured arboreal quiver wielded by heralds of the Earth Goddess. It fires arrows of sacred life energy which smite corruption and darkness"},
    {T0TOME, "A holy tome of healing prayers"},
    {T1TOME, "A hallowed tome of blessed healing rituals"},
    {T2TOME, "An exalted holy tome, filled with prayers and blessed by angels"},
    {T3TOME, "A sacred tome, consecrated by the spirits of the upright and the supplications of the pure"},
    {T4TOME, "An angelic tome, empowered by divine might and justified by the souls of the righteous"},
    {T5TOME, "A sanctified tome, blessed by the heavens and purified by ancient rites, trembling with unseen divine power"},
    {T6TOME, "A tome of blessing, gifted by the gods for the benefit of all good mortals"},
    {T7TOME, "A tome beatified in starlight and written on paper from the ancient wisdom trees, cloaking the worthy in divine reverence"},
    {T8TOME, "A wondrous tome of the seraphic scribesmen to record the deeds of noble heroes and lend them their immortality"},
    {T0HELM, "A sturdy helm used by battlefield sergeants to improve morale in nearby allies"},
    {T1HELM, "A bronze-plated lieutenant's helm, effective for invigorating the fighting spirit of nearby allies"},
    {T2HELM, "A captain's helm of distinctive black iron, capable of inspiring great courage"},
    {T3HELM, "A major's helm of ornate red iron, made to arouse fearlessness among the troops"},
    {T4HELM, "A well-made commander's helm of steel with silver filigree, able to inspire gallantry in large numbers of troops"},
    {T5HELM, "A golden field marshal's helm with platinum detailing and a cockatrice plume, able to motivate entire legions to new heights of tenacity and determination"},
    {T6HELM, "A steel and platinum helm of ancient design, worn by earthrazer generals during the great orcish war"},
    {T7HELM, "An ashen helm of regal grandeur, whose wearers have upraised the greatest legions and inspired total domination"},
    {T8HELM, "A direhelm worn by the champions of men in their steadfast conquest of realms beyond even death"},
    {ATTACKPENDANT, "A rare rhodolite gemstone hanging from an embroidered  leather necklace"},
    {HPPOT, "A potion that instantly restores health points"},
    {MPPOT, "A potion that instantly restores magic points"},
    {ATTPOT, "A potion that permanently increases attack by 1"},
    {DEFPOT, "A potion that permanently increases defense by 1"},
    {DEXPOT, "A potion that permanently increases dexterity by 1"},
    {SPDPOT, "A potion that permanently increases speed by 1"},
    {WISPOT, "A potion that permanently increases wisdom by 1"},
    {VITPOT, "A potion that permanently increases vitality by 1"},
    {LIFEPOT, "A potion that permanently increases health by 5"},
    {MANAPOT, "A potion that permanently increases magic by 5"},
    {CABERNET, "A potent draught from Oryx's wine cellar which is favored amongst henchmen"},
    {FIREWATER, "A potent draught from Oryx's wine cellar which is favored by the Mad God himself"},
    {TWILIGHTGEMSTONE, "An odd stone, eminating a dark and mysterious energy"},
    {CHICKENSWORD, "The severed and crispy wing of a giant chicken, useful as a long-ranged sword"},
    {ARCWAND, "A powerful, short-range piercing wand containing the power of the ArcMage"},
    {ARCTOME, "An evil tome from the Castle which grants the user healing abilities and a devastating blast"},
    {ARCROBE, "Battle-ready robes fitted from the tattered reamains of the ArcMage"},
};

std::vector<std::string> defaultNames = {"Utanu", "Gharr", "Yimi", "Idrae", "Odaru", "Scheev", "Zhiar", "Itani", "Serl", "Oeti", "Tiar", "Issz", "Oshyu", "Deyst", "Oalei", "Vorv", "Iatho", "Uoro", "Urake", "Eashy", "Queq", "Rayr", "Tal", "Drac", "Yangu", "Eango", "Rilr", "Ehoni", "Risrr", "Sek", "Eati", "Laen", "Eendi", "Ril", "Darq", "Seus", "Radph", "Orothi", "Vorck", "Saylt", "Iawa", "Iri", "Lauk", "Lorz"};

std::unordered_map<items, groups> itemToGroup = {
    {T0SWORD, SWORD},
    {T1SWORD, SWORD},
    {T2SWORD, SWORD},
    {T3SWORD, SWORD},
    {T4SWORD, SWORD},
    {T5SWORD, SWORD},
    {T6SWORD, SWORD},
    {T7SWORD, SWORD},
    {T8SWORD, SWORD},
    {T9SWORD, SWORD},
    {T10SWORD, SWORD},
    {T11SWORD, SWORD},
    {T12SWORD, SWORD},
    {T13SWORD, SWORD},
    {T14SWORD, SWORD},
    {IMPBLADE, SWORD},
    {T0BOW, BOW},
    {T1BOW, BOW},
    {T2BOW, BOW},
    {T3BOW, BOW},
    {T4BOW, BOW},
    {T5BOW, BOW},
    {T6BOW, BOW},
    {T7BOW, BOW},
    {T8BOW, BOW},
    {T9BOW, BOW},
    {T10BOW, BOW},
    {T11BOW, BOW},
    {T12BOW, BOW},
    {T13BOW, BOW},
    {T14BOW, BOW},
    {T0WAND, WAND},
    {T1WAND, WAND},
    {T2WAND, WAND},
    {T3WAND, WAND},
    {T4WAND, WAND},
    {T5WAND, WAND},
    {T6WAND, WAND},
    {T7WAND, WAND},
    {T8WAND, WAND},
    {T9WAND, WAND},
    {T10WAND, WAND},
    {T11WAND, WAND},
    {T12WAND, WAND},
    {T13WAND, WAND},
    {T14WAND, WAND},
    {T0ATTRING,RING},
    {T1ATTRING,RING},
    {T2ATTRING,RING},
    {T3ATTRING,RING},
    {T4ATTRING,RING},
    {T0DEFRING,RING},
    {T1DEFRING,RING},
    {T2DEFRING,RING},
    {T3DEFRING,RING},
    {T4DEFRING,RING},
    {T0SPDRING,RING},
    {T1SPDRING,RING},
    {T2SPDRING,RING},
    {T3SPDRING,RING},
    {T4SPDRING,RING},
    {T0VITRING,RING},
    {T1VITRING,RING},
    {T2VITRING,RING},
    {T3VITRING,RING},
    {T4VITRING,RING},
    {T0WISRING,RING},
    {T1WISRING,RING},
    {T2WISRING,RING},
    {T3WISRING,RING},
    {T4WISRING,RING},
    {T0DEXRING,RING},
    {T1DEXRING,RING},
    {T2DEXRING,RING},
    {T3DEXRING,RING},
    {T4DEXRING,RING},
    {T0HPRING,RING},
    {T1HPRING,RING},
    {T2HPRING,RING},
    {T3HPRING,RING},
    {T4HPRING,RING},
    {T0MPRING,RING},
    {T1MPRING,RING},
    {T2MPRING,RING},
    {T3MPRING,RING},
    {T4MPRING,RING},
    {T0LIGHTARMOR,LIGHTARMOR},
    {T0LIGHTARMOR, LIGHTARMOR},
    {T1LIGHTARMOR, LIGHTARMOR},
    {T2LIGHTARMOR, LIGHTARMOR},
    {T3LIGHTARMOR, LIGHTARMOR},
    {T4LIGHTARMOR, LIGHTARMOR},
    {T5LIGHTARMOR, LIGHTARMOR},
    {T6LIGHTARMOR, LIGHTARMOR},
    {T7LIGHTARMOR, LIGHTARMOR},
    {T8LIGHTARMOR, LIGHTARMOR},
    {T9LIGHTARMOR, LIGHTARMOR},
    {T10LIGHTARMOR, LIGHTARMOR},
    {T11LIGHTARMOR, LIGHTARMOR},
    {T12LIGHTARMOR, LIGHTARMOR},
    {T13LIGHTARMOR, LIGHTARMOR},
    {T14LIGHTARMOR, LIGHTARMOR},
    {T0HEAVYARMOR, HEAVYARMOR},
    {T1HEAVYARMOR, HEAVYARMOR},
    {T2HEAVYARMOR, HEAVYARMOR},
    {T3HEAVYARMOR, HEAVYARMOR},
    {T4HEAVYARMOR, HEAVYARMOR},
    {T5HEAVYARMOR, HEAVYARMOR},
    {T6HEAVYARMOR, HEAVYARMOR},
    {T7HEAVYARMOR, HEAVYARMOR},
    {T8HEAVYARMOR, HEAVYARMOR},
    {T9HEAVYARMOR, HEAVYARMOR},
    {T10HEAVYARMOR, HEAVYARMOR},
    {T11HEAVYARMOR, HEAVYARMOR},
    {T12HEAVYARMOR, HEAVYARMOR},
    {T13HEAVYARMOR, HEAVYARMOR},
    {T14HEAVYARMOR, HEAVYARMOR},
    {T0ROBE, ROBE},
    {T1ROBE, ROBE},
    {T2ROBE, ROBE},
    {T3ROBE, ROBE},
    {T4ROBE, ROBE},
    {T5ROBE, ROBE},
    {T6ROBE, ROBE},
    {T7ROBE, ROBE},
    {T8ROBE, ROBE},
    {T9ROBE, ROBE},
    {T10ROBE, ROBE},
    {T11ROBE, ROBE},
    {T12ROBE, ROBE},
    {T13ROBE, ROBE},
    {T14ROBE, ROBE},
    {T0QUIVER, QUIVER},
    {T1QUIVER, QUIVER},
    {T2QUIVER, QUIVER},
    {T3QUIVER, QUIVER},
    {T4QUIVER, QUIVER},
    {T5QUIVER, QUIVER},
    {T6QUIVER, QUIVER},
    {T7QUIVER, QUIVER},
    {T8QUIVER, QUIVER},
    {T0TOME, TOME},
    {T1TOME, TOME},
    {T2TOME, TOME},
    {T3TOME, TOME},
    {T4TOME, TOME},
    {T5TOME, TOME},
    {T6TOME, TOME},
    {T7TOME, TOME},
    {T8TOME, TOME},
    {T0HELM, HELM},
    {T1HELM, HELM},
    {T2HELM, HELM},
    {T3HELM, HELM},
    {T4HELM, HELM},
    {T5HELM, HELM},
    {T6HELM, HELM},
    {T7HELM, HELM},
    {T8HELM, HELM},
    {ATTACKPENDANT,RING},
    {HPPOT, HPPOTGROUP},
    {MPPOT, MPPOTGROUP},
    {ATTPOT, ATTPOTGROUP},
    {DEFPOT, DEFPOTGROUP},
    {DEXPOT, DEXPOTGROUP},
    {SPDPOT, SPDPOTGROUP},
    {WISPOT, WISPOTGROUP},
    {VITPOT, VITPOTGROUP},
    {LIFEPOT, LIFEPOTGROUP},
    {MANAPOT, MANAPOTGROUP},
    {CABERNET, CABERNETGROUP},
    {FIREWATER, FIREWATERGROUP},
    {ADMINCROWN, RING},
    {CHICKENTOME, TOME},
    {SNAKESKINARMOR, LIGHTARMOR},
    {TWILIGHTGEMSTONE, RING},
    {CHICKENSWORD, SWORD},
    {ARCROBE, ROBE},
    {ARCWAND, WAND},
    {ARCTOME, TOME}
};

std::unordered_map<items, sprites> itemEnumToLootBagSpriteEnum = {
    {SNAKESKINARMOR, CYANLOOTBAG},
    {CHICKENTOME, WHITELOOTBAG},
    {ADMINCROWN, BROWNLOOTBAG},
    {T0SWORD, BROWNLOOTBAG},
    {T1SWORD, BROWNLOOTBAG},
    {T2SWORD, BROWNLOOTBAG},
    {T3SWORD, BROWNLOOTBAG},
    {T4SWORD, BROWNLOOTBAG},
    {T5SWORD, BROWNLOOTBAG},
    {T6SWORD, BROWNLOOTBAG},
    {T7SWORD, PURPLELOOTBAG},
    {T8SWORD, PURPLELOOTBAG},
    {T9SWORD, PURPLELOOTBAG},
    {T10SWORD, CYANLOOTBAG},
    {T11SWORD, CYANLOOTBAG},
    {T12SWORD, CYANLOOTBAG},
    {T13SWORD, CYANLOOTBAG},
    {T14SWORD, CYANLOOTBAG},
    {IMPBLADE, WHITELOOTBAG},
    {T0BOW, BROWNLOOTBAG},
    {T1BOW, BROWNLOOTBAG},
    {T2BOW, BROWNLOOTBAG},
    {T3BOW, BROWNLOOTBAG},
    {T4BOW, BROWNLOOTBAG},
    {T5BOW, BROWNLOOTBAG},
    {T6BOW, BROWNLOOTBAG},
    {T7BOW, PURPLELOOTBAG},
    {T8BOW, PURPLELOOTBAG},
    {T9BOW, PURPLELOOTBAG},
    {T10BOW, CYANLOOTBAG},
    {T11BOW, CYANLOOTBAG},
    {T12BOW, CYANLOOTBAG},
    {T13BOW, CYANLOOTBAG},
    {T14BOW, CYANLOOTBAG},
    {T0WAND, BROWNLOOTBAG},
    {T1WAND, BROWNLOOTBAG},
    {T2WAND, BROWNLOOTBAG},
    {T3WAND, BROWNLOOTBAG},
    {T4WAND, BROWNLOOTBAG},
    {T5WAND, BROWNLOOTBAG},
    {T6WAND, BROWNLOOTBAG},
    {T7WAND, PURPLELOOTBAG},
    {T8WAND, PURPLELOOTBAG},
    {T9WAND, PURPLELOOTBAG},
    {T10WAND, CYANLOOTBAG},
    {T11WAND, CYANLOOTBAG},
    {T12WAND, CYANLOOTBAG},
    {T13WAND, CYANLOOTBAG},
    {T14WAND, CYANLOOTBAG},
    {T0ATTRING, BROWNLOOTBAG},
    {T1ATTRING, BROWNLOOTBAG},
    {T2ATTRING, PURPLELOOTBAG},
    {T3ATTRING, PURPLELOOTBAG},
    {T4ATTRING, CYANLOOTBAG},
    {T0DEFRING, BROWNLOOTBAG},
    {T1DEFRING, BROWNLOOTBAG},
    {T2DEFRING, PURPLELOOTBAG},
    {T3DEFRING, PURPLELOOTBAG},
    {T4DEFRING, CYANLOOTBAG},
    {T0SPDRING, BROWNLOOTBAG},
    {T1SPDRING, BROWNLOOTBAG},
    {T2SPDRING, PURPLELOOTBAG},
    {T3SPDRING, PURPLELOOTBAG},
    {T4SPDRING, CYANLOOTBAG},
    {T0VITRING, BROWNLOOTBAG},
    {T1VITRING, BROWNLOOTBAG},
    {T2VITRING, PURPLELOOTBAG},
    {T3VITRING, PURPLELOOTBAG},
    {T4VITRING, CYANLOOTBAG},
    {T0WISRING, BROWNLOOTBAG},
    {T1WISRING, BROWNLOOTBAG},
    {T2WISRING, PURPLELOOTBAG},
    {T3WISRING, PURPLELOOTBAG},
    {T4WISRING, CYANLOOTBAG},
    {T0DEXRING, BROWNLOOTBAG},
    {T1DEXRING, BROWNLOOTBAG},
    {T2DEXRING, PURPLELOOTBAG},
    {T3DEXRING, PURPLELOOTBAG},
    {T4DEXRING, CYANLOOTBAG},
    {T0HPRING, BROWNLOOTBAG},
    {T1HPRING, BROWNLOOTBAG},
    {T2HPRING, PURPLELOOTBAG},
    {T3HPRING, PURPLELOOTBAG},
    {T4HPRING, CYANLOOTBAG},
    {T0MPRING, BROWNLOOTBAG},
    {T1MPRING, BROWNLOOTBAG},
    {T2MPRING, PURPLELOOTBAG},
    {T3MPRING, PURPLELOOTBAG},
    {T4MPRING, CYANLOOTBAG},
    {T0LIGHTARMOR, BROWNLOOTBAG},
    {T0LIGHTARMOR, BROWNLOOTBAG},
    {T1LIGHTARMOR, BROWNLOOTBAG},
    {T2LIGHTARMOR, BROWNLOOTBAG},
    {T3LIGHTARMOR, BROWNLOOTBAG},
    {T4LIGHTARMOR, BROWNLOOTBAG},
    {T5LIGHTARMOR, BROWNLOOTBAG},
    {T6LIGHTARMOR, BROWNLOOTBAG},
    {T7LIGHTARMOR, PURPLELOOTBAG},
    {T8LIGHTARMOR, PURPLELOOTBAG},
    {T9LIGHTARMOR, PURPLELOOTBAG},
    {T10LIGHTARMOR, CYANLOOTBAG},
    {T11LIGHTARMOR, CYANLOOTBAG},
    {T12LIGHTARMOR, CYANLOOTBAG},
    {T13LIGHTARMOR, CYANLOOTBAG},
    {T14LIGHTARMOR, CYANLOOTBAG},
    {T0HEAVYARMOR, BROWNLOOTBAG},
    {T1HEAVYARMOR, BROWNLOOTBAG},
    {T2HEAVYARMOR, BROWNLOOTBAG},
    {T3HEAVYARMOR, BROWNLOOTBAG},
    {T4HEAVYARMOR, BROWNLOOTBAG},
    {T5HEAVYARMOR, BROWNLOOTBAG},
    {T6HEAVYARMOR, BROWNLOOTBAG},
    {T7HEAVYARMOR, PURPLELOOTBAG},
    {T8HEAVYARMOR, PURPLELOOTBAG},
    {T9HEAVYARMOR, PURPLELOOTBAG},
    {T10HEAVYARMOR, CYANLOOTBAG},
    {T11HEAVYARMOR, CYANLOOTBAG},
    {T12HEAVYARMOR, CYANLOOTBAG},
    {T13HEAVYARMOR, CYANLOOTBAG},
    {T14HEAVYARMOR, CYANLOOTBAG},
    {T0ROBE, BROWNLOOTBAG},
    {T1ROBE, BROWNLOOTBAG},
    {T2ROBE, BROWNLOOTBAG},
    {T3ROBE, BROWNLOOTBAG},
    {T4ROBE, BROWNLOOTBAG},
    {T5ROBE, BROWNLOOTBAG},
    {T6ROBE, BROWNLOOTBAG},
    {T7ROBE, PURPLELOOTBAG},
    {T8ROBE, PURPLELOOTBAG},
    {T9ROBE, PURPLELOOTBAG},
    {T10ROBE, CYANLOOTBAG},
    {T11ROBE, CYANLOOTBAG},
    {T12ROBE, CYANLOOTBAG},
    {T13ROBE, CYANLOOTBAG},
    {T14ROBE, CYANLOOTBAG},
    {T0QUIVER, BROWNLOOTBAG},
    {T1QUIVER, BROWNLOOTBAG},
    {T2QUIVER, BROWNLOOTBAG},
    {T3QUIVER, PURPLELOOTBAG},
    {T4QUIVER, PURPLELOOTBAG},
    {T5QUIVER, CYANLOOTBAG},
    {T6QUIVER, CYANLOOTBAG},
    {T7QUIVER, CYANLOOTBAG},
    {T8QUIVER, CYANLOOTBAG},
    {T0TOME, BROWNLOOTBAG},
    {T1TOME, BROWNLOOTBAG},
    {T2TOME, BROWNLOOTBAG},
    {T3TOME, PURPLELOOTBAG},
    {T4TOME, PURPLELOOTBAG},
    {T5TOME, CYANLOOTBAG},
    {T6TOME, CYANLOOTBAG},
    {T7TOME, CYANLOOTBAG},
    {T8TOME, CYANLOOTBAG},
    {T0HELM, BROWNLOOTBAG},
    {T1HELM, BROWNLOOTBAG},
    {T2HELM, BROWNLOOTBAG},
    {T3HELM, PURPLELOOTBAG},
    {T4HELM, PURPLELOOTBAG},
    {T5HELM, CYANLOOTBAG},
    {T6HELM, CYANLOOTBAG},
    {T7HELM, CYANLOOTBAG},
    {T8HELM, CYANLOOTBAG},
    {ATTACKPENDANT, CYANLOOTBAG},
    {HPPOT, BROWNLOOTBAG},
    {MPPOT, BROWNLOOTBAG},
    {ATTPOT, BLUELOOTBAG},
    {DEFPOT, BLUELOOTBAG},
    {DEXPOT, BLUELOOTBAG},
    {SPDPOT, BLUELOOTBAG},
    {WISPOT, BLUELOOTBAG},
    {VITPOT, BLUELOOTBAG},
    {LIFEPOT, BLUELOOTBAG},
    {MANAPOT, BLUELOOTBAG},
    {CABERNET, PURPLELOOTBAG},
    {FIREWATER, PURPLELOOTBAG},
    {TWILIGHTGEMSTONE, WHITELOOTBAG},
    {CHICKENSWORD, WHITELOOTBAG},
    {ARCROBE, WHITELOOTBAG},
    {ARCWAND, WHITELOOTBAG},
    {ARCTOME, WHITELOOTBAG}

};

// DATA FOR ITEM SPRITE. NOT FOR WEAPON PROJCETILES! SEE itemEnumToPEC for that
std::unordered_map<items, spritedata> itemEnumTospriteData = {
    {ARCROBE, {LOFIOBJ3, 8, 8, {8*6, 8*8, 8, 8}, 12, true, false}},
    {ARCWAND, {LOFIOBJ2, 8, 8, {8*7, 8*11, 8, 8}, 12, true, false}},
    {ARCTOME, {LOFIOBJ3, 8, 8, {8*5, 8*2, 8, 8}, 12, true, false}},
    {T0SWORD, {LOFIOBJ5, 8, 8, {8*0, 8*3, 8, 8}, 12, true, false}},
    {T1SWORD, {LOFIOBJ5, 8, 8, {8*1, 8*3, 8, 8}, 12, true, false}},
    {T2SWORD, {LOFIOBJ5, 8, 8, {8*2, 8*3, 8, 8}, 12, true, false}},
    {T3SWORD, {LOFIOBJ5, 8, 8, {8*3, 8*3, 8, 8}, 12, true, false}},
    {T4SWORD, {LOFIOBJ5, 8, 8, {8*4, 8*3, 8, 8}, 12, true, false}},
    {T5SWORD, {LOFIOBJ5, 8, 8, {8*5, 8*3, 8, 8}, 12, true, false}},
    {T6SWORD, {LOFIOBJ5, 8, 8, {8*6, 8*3, 8, 8}, 12, true, false}},
    {T7SWORD, {LOFIOBJ5, 8, 8, {8*7, 8*3, 8, 8}, 12, true, false}},
    {T8SWORD, {LOFIOBJ5, 8, 8, {8*8, 8*3, 8, 8}, 12, true, false}},
    {T9SWORD, {LOFIOBJ5, 8, 8, {8*9, 8*3, 8, 8}, 12, true, false}},
    {T10SWORD, {LOFIOBJ5, 8, 8, {8*10, 8*3, 8, 8}, 12, true, false}},
    {T11SWORD, {LOFIOBJ5, 8, 8, {8*11, 8*3, 8, 8}, 12, true, false}},
    {T12SWORD, {LOFIOBJ5, 8, 8, {8*12, 8*3, 8, 8}, 12, true, false}},
    {T13SWORD, {LOFIOBJ5, 8, 8, {8*13, 8*3, 8, 8}, 12, true, false}},
    {T14SWORD, {LOFIOBJ5, 8, 8, {8*14, 8*3, 8, 8}, 12, true, false}},
    {IMPBLADE, {LOFIOBJ2, 8, 8, {8*3, 8*11, 8, 8}, 12, true, false}},
    {T0BOW, {LOFIOBJ5, 8, 8, {8*0, 8*5, 8, 8}, 12, true, false}},
    {T1BOW, {LOFIOBJ5, 8, 8, {8*1, 8*5, 8, 8}, 12, true, false}},
    {T2BOW, {LOFIOBJ5, 8, 8, {8*2, 8*5, 8, 8}, 12, true, false}},
    {T3BOW, {LOFIOBJ5, 8, 8, {8*3, 8*5, 8, 8}, 12, true, false}},
    {T4BOW, {LOFIOBJ5, 8, 8, {8*4, 8*5, 8, 8}, 12, true, false}},
    {T5BOW, {LOFIOBJ5, 8, 8, {8*5, 8*5, 8, 8}, 12, true, false}},
    {T6BOW, {LOFIOBJ5, 8, 8, {8*6, 8*5, 8, 8}, 12, true, false}},
    {T7BOW, {LOFIOBJ5, 8, 8, {8*7, 8*5, 8, 8}, 12, true, false}},
    {T8BOW, {LOFIOBJ5, 8, 8, {8*8, 8*5, 8, 8}, 12, true, false}},
    {T9BOW, {LOFIOBJ5, 8, 8, {8*9, 8*5, 8, 8}, 12, true, false}},
    {T10BOW, {LOFIOBJ5, 8, 8, {8*10, 8*5, 8, 8}, 12, true, false}},
    {T11BOW, {LOFIOBJ5, 8, 8, {8*11, 8*5, 8, 8}, 12, true, false}},
    {T12BOW, {LOFIOBJ5, 8, 8, {8*12, 8*5, 8, 8}, 12, true, false}},
    {T13BOW, {LOFIOBJ5, 8, 8, {8*13, 8*5, 8, 8}, 12, true, false}},
    {T14BOW, {LOFIOBJ5, 8, 8, {8*14, 8*5, 8, 8}, 12, true, false}},
    {T0WAND, {LOFIOBJ5, 8, 8, {8*0, 8*4, 8, 8}, 12, true, false}},
    {T1WAND, {LOFIOBJ5, 8, 8, {8*1, 8*4, 8, 8}, 12, true, false}},
    {T2WAND, {LOFIOBJ5, 8, 8, {8*2, 8*4, 8, 8}, 12, true, false}},
    {T3WAND, {LOFIOBJ5, 8, 8, {8*3, 8*4, 8, 8}, 12, true, false}},
    {T4WAND, {LOFIOBJ5, 8, 8, {8*4, 8*4, 8, 8}, 12, true, false}},
    {T5WAND, {LOFIOBJ5, 8, 8, {8*5, 8*4, 8, 8}, 12, true, false}},
    {T6WAND, {LOFIOBJ5, 8, 8, {8*6, 8*4, 8, 8}, 12, true, false}},
    {T7WAND, {LOFIOBJ5, 8, 8, {8*7, 8*4, 8, 8}, 12, true, false}},
    {T8WAND, {LOFIOBJ5, 8, 8, {8*8, 8*4, 8, 8}, 12, true, false}},
    {T9WAND, {LOFIOBJ5, 8, 8, {8*9, 8*4, 8, 8}, 12, true, false}},
    {T10WAND, {LOFIOBJ5, 8, 8, {8*10, 8*4, 8, 8}, 12, true, false}},
    {T11WAND, {LOFIOBJ5, 8, 8, {8*11, 8*4, 8, 8}, 12, true, false}},
    {T12WAND, {LOFIOBJ5, 8, 8, {8*12, 8*4, 8, 8}, 12, true, false}},
    {T13WAND, {LOFIOBJ5, 8, 8, {8*13, 8*4, 8, 8}, 12, true, false}},
    {T14WAND, {LOFIOBJ5, 8, 8, {8*14, 8*4, 8, 8}, 12, true, false}},
    {T0ATTRING, {LOFIOBJ5, 8, 8, {8*0, 8*8, 8, 8}, 12, true, false}},
    {T1ATTRING, {LOFIOBJ5, 8, 8, {8*0, 8*9, 8, 8}, 12, true, false}},
    {T2ATTRING, {LOFIOBJ5, 8, 8, {8*0, 8*10, 8, 8}, 12, true, false}},
    {T3ATTRING, {LOFIOBJ5, 8, 8, {8*0, 8*11, 8, 8}, 12, true, false}},
    {T4ATTRING, {LOFIOBJ5, 8, 8, {8*0, 8*12, 8, 8}, 12, true, false}},
    {T0DEFRING, {LOFIOBJ5, 8, 8, {8*1, 8*8, 8, 8}, 12, true, false}},
    {T1DEFRING, {LOFIOBJ5, 8, 8, {8*1, 8*9, 8, 8}, 12, true, false}},
    {T2DEFRING, {LOFIOBJ5, 8, 8, {8*1, 8*10, 8, 8}, 12, true, false}},
    {T3DEFRING, {LOFIOBJ5, 8, 8, {8*1, 8*11, 8, 8}, 12, true, false}},
    {T4DEFRING, {LOFIOBJ5, 8, 8, {8*1, 8*12, 8, 8}, 12, true, false}},
    {T0SPDRING, {LOFIOBJ5, 8, 8, {8*2, 8*8, 8, 8}, 12, true, false}},
    {T1SPDRING, {LOFIOBJ5, 8, 8, {8*2, 8*9, 8, 8}, 12, true, false}},
    {T2SPDRING, {LOFIOBJ5, 8, 8, {8*2, 8*10, 8, 8}, 12, true, false}},
    {T3SPDRING, {LOFIOBJ5, 8, 8, {8*2, 8*11, 8, 8}, 12, true, false}},
    {T4SPDRING, {LOFIOBJ5, 8, 8, {8*2, 8*12, 8, 8}, 12, true, false}},
    {T0VITRING, {LOFIOBJ5, 8, 8, {8*3, 8*8, 8, 8}, 12, true, false}},
    {T1VITRING, {LOFIOBJ5, 8, 8, {8*3, 8*9, 8, 8}, 12, true, false}},
    {T2VITRING, {LOFIOBJ5, 8, 8, {8*3, 8*10, 8, 8}, 12, true, false}},
    {T3VITRING, {LOFIOBJ5, 8, 8, {8*3, 8*11, 8, 8}, 12, true, false}},
    {T4VITRING, {LOFIOBJ5, 8, 8, {8*3, 8*12, 8, 8}, 12, true, false}},
    {T0WISRING, {LOFIOBJ5, 8, 8, {8*4, 8*8, 8, 8}, 12, true, false}},
    {T1WISRING, {LOFIOBJ5, 8, 8, {8*4, 8*9, 8, 8}, 12, true, false}},
    {T2WISRING, {LOFIOBJ5, 8, 8, {8*4, 8*10, 8, 8}, 12, true, false}},
    {T3WISRING, {LOFIOBJ5, 8, 8, {8*4, 8*11, 8, 8}, 12, true, false}},
    {T4WISRING, {LOFIOBJ5, 8, 8, {8*4, 8*12, 8, 8}, 12, true, false}},
    {T0DEXRING, {LOFIOBJ5, 8, 8, {8*5, 8*8, 8, 8}, 12, true, false}},
    {T1DEXRING, {LOFIOBJ5, 8, 8, {8*5, 8*9, 8, 8}, 12, true, false}},
    {T2DEXRING, {LOFIOBJ5, 8, 8, {8*5, 8*10, 8, 8}, 12, true, false}},
    {T3DEXRING, {LOFIOBJ5, 8, 8, {8*5, 8*11, 8, 8}, 12, true, false}},
    {T4DEXRING, {LOFIOBJ5, 8, 8, {8*5, 8*12, 8, 8}, 12, true, false}},
    {T0HPRING, {LOFIOBJ5, 8, 8, {8*6, 8*8, 8, 8}, 12, true, false}},
    {T1HPRING, {LOFIOBJ5, 8, 8, {8*6, 8*9, 8, 8}, 12, true, false}},
    {T2HPRING, {LOFIOBJ5, 8, 8, {8*6, 8*10, 8, 8}, 12, true, false}},
    {T3HPRING, {LOFIOBJ5, 8, 8, {8*6, 8*11, 8, 8}, 12, true, false}},
    {T4HPRING, {LOFIOBJ5, 8, 8, {8*6, 8*12, 8, 8}, 12, true, false}},
    {T0MPRING, {LOFIOBJ5, 8, 8, {8*7, 8*8, 8, 8}, 12, true, false}},
    {T1MPRING, {LOFIOBJ5, 8, 8, {8*7, 8*9, 8, 8}, 12, true, false}},
    {T2MPRING, {LOFIOBJ5, 8, 8, {8*7, 8*10, 8, 8}, 12, true, false}},
    {T3MPRING, {LOFIOBJ5, 8, 8, {8*7, 8*11, 8, 8}, 12, true, false}},
    {T4MPRING, {LOFIOBJ5, 8, 8, {8*7, 8*12, 8, 8}, 12, true, false}},
    {T0LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*0, 8*0, 8, 8}, 12, true, false}},
    {T1LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*1, 8*0, 8, 8}, 12, true, false}},
    {T2LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*2, 8*0, 8, 8}, 12, true, false}},
    {T3LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*3, 8*0, 8, 8}, 12, true, false}},
    {T4LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*4, 8*0, 8, 8}, 12, true, false}},
    {T5LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*5, 8*0, 8, 8}, 12, true, false}},
    {T6LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*6, 8*0, 8, 8}, 12, true, false}},
    {T7LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*7, 8*0, 8, 8}, 12, true, false}},
    {T8LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*8, 8*0, 8, 8}, 12, true, false}},
    {T9LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*9, 8*0, 8, 8}, 12, true, false}},
    {T10LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*10, 8*0, 8, 8}, 12, true, false}},
    {T11LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*11, 8*0, 8, 8}, 12, true, false}},
    {T12LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*12, 8*0, 8, 8}, 12, true, false}},
    {T13LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*13, 8*0, 8, 8}, 12, true, false}},
    {T14LIGHTARMOR, {LOFIOBJ5, 8, 8, {8*14, 8*0, 8, 8}, 12, true, false}},
    {T0HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*0, 8*2, 8, 8}, 12, true, false}},
    {T1HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*1, 8*2, 8, 8}, 12, true, false}},
    {T2HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*2, 8*2, 8, 8}, 12, true, false}},
    {T3HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*3, 8*2, 8, 8}, 12, true, false}},
    {T4HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*4, 8*2, 8, 8}, 12, true, false}},
    {T5HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*5, 8*2, 8, 8}, 12, true, false}},
    {T6HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*6, 8*2, 8, 8}, 12, true, false}},
    {T7HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*7, 8*2, 8, 8}, 12, true, false}},
    {T8HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*8, 8*2, 8, 8}, 12, true, false}},
    {T9HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*9, 8*2, 8, 8}, 12, true, false}},
    {T10HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*10, 8*2, 8, 8}, 12, true, false}},
    {T11HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*11, 8*2, 8, 8}, 12, true, false}},
    {T12HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*12, 8*2, 8, 8}, 12, true, false}},
    {T13HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*13, 8*2, 8, 8}, 12, true, false}},
    {T14HEAVYARMOR, {LOFIOBJ5, 8, 8, {8*14, 8*2, 8, 8}, 12, true, false}},
    {T0ROBE, {LOFIOBJ5, 8, 8, {8*0, 8*1, 8, 8}, 12, true, false}},
    {T1ROBE, {LOFIOBJ5, 8, 8, {8*1, 8*1, 8, 8}, 12, true, false}},
    {T2ROBE, {LOFIOBJ5, 8, 8, {8*2, 8*1, 8, 8}, 12, true, false}},
    {T3ROBE, {LOFIOBJ5, 8, 8, {8*3, 8*1, 8, 8}, 12, true, false}},
    {T4ROBE, {LOFIOBJ5, 8, 8, {8*4, 8*1, 8, 8}, 12, true, false}},
    {T5ROBE, {LOFIOBJ5, 8, 8, {8*5, 8*1, 8, 8}, 12, true, false}},
    {T6ROBE, {LOFIOBJ5, 8, 8, {8*6, 8*1, 8, 8}, 12, true, false}},
    {T7ROBE, {LOFIOBJ5, 8, 8, {8*7, 8*1, 8, 8}, 12, true, false}},
    {T8ROBE, {LOFIOBJ5, 8, 8, {8*8, 8*1, 8, 8}, 12, true, false}},
    {T9ROBE, {LOFIOBJ5, 8, 8, {8*9, 8*1, 8, 8}, 12, true, false}},
    {T10ROBE, {LOFIOBJ5, 8, 8, {8*10, 8*1, 8, 8}, 12, true, false}},
    {T11ROBE, {LOFIOBJ5, 8, 8, {8*11, 8*1, 8, 8}, 12, true, false}},
    {T12ROBE, {LOFIOBJ5, 8, 8, {8*12, 8*1, 8, 8}, 12, true, false}},
    {T13ROBE, {LOFIOBJ5, 8, 8, {8*13, 8*1, 8, 8}, 12, true, false}},
    {T14ROBE, {LOFIOBJ5, 8, 8, {8*14, 8*1, 8, 8}, 12, true, false}},
    {T0QUIVER, {LOFIOBJ6, 8, 8, {8*0, 8*3, 8, 8}, 12, true, false}},
    {T1QUIVER, {LOFIOBJ6, 8, 8, {8*1, 8*3, 8, 8}, 12, true, false}},
    {T2QUIVER, {LOFIOBJ6, 8, 8, {8*2, 8*3, 8, 8}, 12, true, false}},
    {T3QUIVER, {LOFIOBJ6, 8, 8, {8*3, 8*3, 8, 8}, 12, true, false}},
    {T4QUIVER, {LOFIOBJ6, 8, 8, {8*4, 8*3, 8, 8}, 12, true, false}},
    {T5QUIVER, {LOFIOBJ6, 8, 8, {8*5, 8*3, 8, 8}, 12, true, false}},
    {T6QUIVER, {LOFIOBJ6, 8, 8, {8*6, 8*3, 8, 8}, 12, true, false}},
    {T7QUIVER, {LOFIOBJ6, 8, 8, {8*7, 8*3, 8, 8}, 12, true, false}},
    {T8QUIVER, {LOFIOBJ6, 8, 8, {8*8, 8*3, 8, 8}, 12, true, false}},
    {T0TOME, {LOFIOBJ6, 8, 8, {8*0, 8*5, 8, 8}, 12, true, false}},
    {T1TOME, {LOFIOBJ6, 8, 8, {8*1, 8*5, 8, 8}, 12, true, false}},
    {T2TOME, {LOFIOBJ6, 8, 8, {8*2, 8*5, 8, 8}, 12, true, false}},
    {T3TOME, {LOFIOBJ6, 8, 8, {8*3, 8*5, 8, 8}, 12, true, false}},
    {T4TOME, {LOFIOBJ6, 8, 8, {8*4, 8*5, 8, 8}, 12, true, false}},
    {T5TOME, {LOFIOBJ6, 8, 8, {8*5, 8*5, 8, 8}, 12, true, false}},
    {T6TOME, {LOFIOBJ6, 8, 8, {8*6, 8*5, 8, 8}, 12, true, false}},
    {T7TOME, {LOFIOBJ6, 8, 8, {8*7, 8*5, 8, 8}, 12, true, false}},
    {T8TOME, {LOFIOBJ6, 8, 8, {8*8, 8*5, 8, 8}, 12, true, false}},
    {T0HELM, {LOFIOBJ6, 8, 8, {8*0, 8*6, 8, 8}, 12, true, false}},
    {T1HELM, {LOFIOBJ6, 8, 8, {8*1, 8*6, 8, 8}, 12, true, false}},
    {T2HELM, {LOFIOBJ6, 8, 8, {8*2, 8*6, 8, 8}, 12, true, false}},
    {T3HELM, {LOFIOBJ6, 8, 8, {8*3, 8*6, 8, 8}, 12, true, false}},
    {T4HELM, {LOFIOBJ6, 8, 8, {8*4, 8*6, 8, 8}, 12, true, false}},
    {T5HELM, {LOFIOBJ6, 8, 8, {8*5, 8*6, 8, 8}, 12, true, false}},
    {T6HELM, {LOFIOBJ6, 8, 8, {8*6, 8*6, 8, 8}, 12, true, false}},
    {T7HELM, {LOFIOBJ6, 8, 8, {8*7, 8*6, 8, 8}, 12, true, false}},
    {T8HELM, {LOFIOBJ6, 8, 8, {8*8, 8*6, 8, 8}, 12, true, false}},
    {ATTACKPENDANT, {LOFIOBJ2, 8, 8, {8*1, 8*15, 8, 8}, 12, true, false}},
    {HPPOT, {LOFIOBJ2, 8, 8 ,{8*2, 8*3, 8, 8}, 12, true, false}},
    {MPPOT, {LOFIOBJ2, 8, 8 ,{8*3, 8*3, 8, 8}, 12, true, false}},
    {ATTPOT, {LOFIOBJ2, 8, 8 ,{8*4, 8*3, 8, 8}, 12, true, false}},
    {DEFPOT, {LOFIOBJ2, 8, 8 ,{8*5, 8*3, 8, 8}, 12, true, false}},
    {DEXPOT, {LOFIOBJ2, 8, 8 ,{8*7, 8*3, 8, 8}, 12, true, false}},
    {SPDPOT, {LOFIOBJ2, 8, 8 ,{8*6, 8*3, 8, 8}, 12, true, false}},
    {WISPOT, {LOFIOBJ2, 8, 8 ,{8*1, 8*3, 8, 8}, 12, true, false}},
    {VITPOT, {LOFIOBJ2, 8, 8 ,{8*0, 8*3, 8, 8}, 12, true, false}},
    {LIFEPOT, {LOFIOBJ2, 8, 8 ,{8*6, 8*2, 8, 8}, 12, true, false}},
    {MANAPOT, {LOFIOBJ2, 8, 8 ,{8*7, 8*2, 8, 8}, 12, true, false}},
    {CABERNET, {LOFIOBJ2, 8, 8 ,{8*15, 8*2, 8, 8}, 12, true, false}},
    {FIREWATER, {LOFIOBJ2, 8, 8 ,{8*11, 8*2, 8, 8}, 12, true, false}},
    {ADMINCROWN, {LOFIOBJ3, 8, 8 ,{8*6, 8*12, 8, 8}, 12, true, false}},
    {CHICKENTOME, {LOFIOBJ2, 8, 8 ,{8*4, 8*11, 8, 8}, 12, true, false}},
    {SNAKESKINARMOR, {LOFIOBJ2, 8, 8 ,{8*0, 8*0, 8, 8}, 12, true, false}},
    {TWILIGHTGEMSTONE, {LOFIOBJ3, 8, 8 ,{8*1, 8*72, 8, 8}, 12, true, false}},
    {CHICKENSWORD, {LOFIOBJ2, 8, 8, {8*5, 8*11, 8, 8,}, 12, true, false}},
};

std::unordered_map<items, playerPECupdateData> itemEnumToPECdata = {
    {T0SWORD, {350,45,90,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T1SWORD,{350,60,105,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T2SWORD,{350,75,105,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T3SWORD,{350,75,120,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T4SWORD,{350,75,135,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T5SWORD,{350,90,135,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3, true,10,10,{14,14}}},
    {T6SWORD,{350,30,210,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*8, 8, 8}, 3, true,10,10,{14,14}}},
    {T7SWORD,{350,150,180,640,false,1,0,LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false,8,8,{0,10}}},
    {T8SWORD,{350,180,255,640,false,1,0,LOFIOBJ2,8, 8, {8*1,8*7,8,8}, 3, true, 10,10,{14,14}}},
    {T9SWORD,{350,195,255,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*8, 8, 8}, 3, true,10,10,{14,14}}},
    {T10SWORD,{350,210,255,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3, true,10,10,{14,14}}},
    {T11SWORD,{350,210,270,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*11, 8, 8}, 3,true,10,10,{14,14}}},
    {T12SWORD,{350,220,275,640,false,1,0,LOFIOBJ2, 8, 8, {2*8, 8*7, 8, 8}, 3,true,10,10,{14,14}}},
    {T13SWORD,{350,235,290,640,false,1,0,LOFIOBJ, 8, 8, {10*8, 8*10, 8, 8}, 3, true,10,10,{14,14}}},
    {T14SWORD,{350,250,305,640,false,1,0,LOFIOBJ2,8, 8, {8*1,8*7,8,8}, 3, true, 10, 10, {14,14}}},
    {IMPBLADE,{350,90,135,500,false,2,40,LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3, true,10,10,{14,14}}},
    {CHICKENSWORD,{500,90,130,640,false,1,0,LOFIOBJ2,8, 8, {8*6,8*11,8,8}, 3, true, 32,32,{4,4}}},

    {T0BOW, {440, 10, 40, 1024, true,1,0,LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T1BOW, {440, 15, 45, 1024, true,1,0,LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T2BOW, {469, 20, 50, 1024, true,1,0, LOFIOBJ, 3,7, {8*10+3,8*5+1,3,7},3,false,8,8,{0,10}}},
    {T3BOW, {440, 25, 55, 1024, true,1,0,LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T4BOW, {440, 35, 65, 1024, true,1,0,LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T5BOW, {440, 45, 65, 1024, true,1,0,LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false,12,12,{0,8}}},
    {T6BOW, {440, 30, 50, 1024, true,2,12,LOFIPROJS, 8,8, {8*3, 8*7, 8, 8},3,true,8,8,{16,16}}},
    {T7BOW, {469, 50, 70, 1024, true,1,0,LOFIOBJ, 3,7, {8*10+3,8*5+1,3,7},3,false,8,8,{0,10}}},
    {T8BOW, {440, 40, 60, 1024, true,3,24,LOFIPROJS, 8, 8, {8*4, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T9BOW, {440, 40, 65, 1024, true,3,24,LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T10BOW, {440, 45, 65, 1024, true,3,24,LOFIPROJS, 8, 8, {8*3, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T11BOW, {440, 45, 70, 1024, true,3,24,LOFIPROJS, 8, 8, {8*2, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T12BOW, {440, 50, 70, 1024, true,3,24,LOFIPROJS, 8, 8, {8*3, 8*7, 8, 8}, 3,true,8,8,{16,16}}},
    {T13BOW, {440, 55, 75, 1024, true,3,24,LOFIOBJ5B, 8, 8, {8*13, 8*11, 8, 8}, 3,true,8,8,{16,16}}},
    {T14BOW, {440, 60, 80, 1024, true,3,24,LOFIOBJ5B, 8, 8, {8*14, 8*11, 8, 8}, 3,true,8,8,{16,16}}},

    {T0WAND, {832, 20, 40, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false,12,12,{0,8}}},
    {T1WAND, {832, 30, 50, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T2WAND, {832, 35, 55, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T3WAND, {832, 40, 60, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T4WAND, {832, 50, 70, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T5WAND, {832, 60, 80, 770, false, 1, 0,LOFIOBJ, 3, 6, {12*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T6WAND, {832, 70, 90, 770, false, 1, 0,LOFIOBJ, 8, 8, {10*8, 8*12, 8, 8}, 3,true,10,10,{14,14}}},
    {T7WAND, {832, 80, 100, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false,12,12,{0,8}}},
    {T8WAND, {832, 80, 120, 770, false, 1, 0,LOFIOBJ, 3, 6, {12*8+3, 8*13+1, 3, 6}, 3, false,10,10,{14,14}}},
    {T9WAND, {832, 85, 125, 770, false, 1, 0,LOFIOBJ, 3, 6, {12*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T10WAND, {832, 85, 130, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false,12,12,{0,8}}},
    {T11WAND, {832, 90, 130, 770, false, 1, 0,LOFIOBJ, 3, 6, {12*8+3, 8*13+1, 3, 6}, 3, false,10,10,{14,14}}},
    {T12WAND, {832, 90, 135, 770, false, 1, 0,LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false,12,12,{0,8}}},
    {T13WAND, {832, 100, 135, 770, false, 1, 0,LOFIOBJ5B, 3, 6, {14*8+2, 8*10+1, 3, 6}, 3, false,12,12,{0,8}}},
    {T14WAND, {832, 105, 140, 770, false, 1, 0,LOFIOBJ5B, 3, 6, {13*8+2, 8*10+1, 3, 6}, 3, false,12,12,{0,8}}},
    {ARCWAND, {416, 120, 130, 770, true, 1, 0,LOFIOBJ3, 8,8,{8*1,8*22,8,8}, 3, false,32,32,{4,4}}}

};

std::vector<long> nextXPToLevelUp{0,50,200,450,800,1250,1800,2450,3200,4050,5000,6050,7200,8450,9800,11250,12800,14450,16200,18050};

std::unordered_map<wallTheme, wallData> wallThemeToWallData = { // {textureEnum, {wall, ceiling}, alpha}
    {UDL, {LOFIENVIRONMENT, {glm::ivec2(0,0), glm::ivec2(4,0)}, glm::ivec2(4,4)}},
    {NEXUS, {LOFIENVIRONMENT, {glm::ivec2(0,5), glm::ivec2(3,5)}, glm::ivec2(4,4)}},
    {VAULT, {LOFIENVIRONMENT, {glm::ivec2(0,5), glm::ivec2(3,5)}, glm::ivec2(4,4)}},
    {CHICKENLAIR, {LOFIENVIRONMENT, {glm::ivec2(0,1), glm::ivec2(4,1)}, glm::ivec2(4,4)}},
    {GORDONSLAIRWALLTHEME, {LOFIENVIRONMENT, {glm::ivec2(0,2), glm::ivec2(4,2)}, glm::ivec2(4,4)}}
};

std::unordered_map<classes, std::array<int, 8>> maxStats = {
    {ARCHER, {700,252,75,25,50,50,75,50}},
    {PRIEST, {670,385,50,25,50,50,75,75}},
    {WARRIOR, {770,252,75,25,50,50,75,50}}
};


// animated shooting data is the num of pixels the sprite goes "out of its own bounds"
// ex: horizontal sword animation makes an 8x8 sprite more than 8x8 
std::unordered_map<classes, AnimatedShootingData> classToAnimatedShootingData = {
    {WARRIOR, {4}},
    {ARCHER, {0}},
    {PRIEST, {3}}
};

std::unordered_map<sprites, AnimatedShootingData> spriteToAnimatedShootingData = {
    {SKELETON0, {0}},
    {SKELETON1, {4}},
    {SKELETON2, {4}},
    {SKELETON3, {0}},
    {SKELETON4, {0}},
    {SKELETON5, {0}},
    {WHITECHICKEN, {0}},
    {ROOSTER, {0}},
    {BIGROOSTER, {0}},
    {BIGTURKEY, {0}},
    {BOSSCHICKEN, {0}},
    {ROBOTURKEY, {0}},
    {ORANGETURKEY, {0}},
    {YELLOWTURKEY, {0}},
    {CYANTURKEY, {0}},
    {ARCMAGE, {2}},
    {HELLHOUND, {0}},
    {IMP0, {1}},
    {IMP1, {0}},
    {IMP2, {3}},
    {IMP3, {0}},
    {WHITEDEMON, {0}},
    {MOUSE0, {2}},
    {BAT0, {0}},
    {GORDON, {0}},
    {SHEEP, {0}},
    {GIGASHEEP, {0}}

};

/*  bool isShooting; 
    bool isShooting; 
    unsigned short repeatFrequency; // ms per shot 
    unsigned short duration; // ms until death of projectile
    unsigned short damage; 
    unsigned short projectileSpeed;
    bool piercing;
    unsigned char shots; // dont use odd number of shots with 360, 720, etc
    float arcgap; 

    textureEnums spriteassetId; // sprite info for projectile
    unsigned char spritewidth;
    unsigned char spriteheight;
    SDL_Rect spritesrcRect;
    unsigned char spritezIndex;
    bool spriteisFixed; // fixed sprites stay in same spot on screen 
    bool spritediagonalSprite;

    unsigned short boxwidth; // box info for projectile
    unsigned short boxheight;
    glm::vec2 boxoffset; 

    bool inflictsStatusEffect;
    statuses statusEffect;
    unsigned short durationMS;

    bool ignoresDefense;
*/

// GIVEN A MONSTER SPRITE, RETURNS PROJECTILE EMITTER COMPONENT
std::unordered_map<sprites, enemyPECData> spriteEnumToPEC = {
    {SKELETON0, {false, 500, 400, 5, 500, false, 1, 0, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false, 8,8,{0,10}, false, QUIET, 0, false}},
    {SKELETON1, {false, 1000, 400, 10, 500, false, 1, 0, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false, 8,8,{0,10}, false, QUIET, 0, false}},
    {SKELETON2, {false, 1000, 400, 15, 500, false, 1, 0, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false, 8,8,{0,10}, false, QUIET, 0, false}},
    {SKELETON3, {false, 1000, 1000, 20, 750, false, 3, 8, LOFIOBJ, 8, 8, {10*8, 8*12, 8, 8}, 3,false, true, 10,10,{14,14}, false, QUIET, 0, false}},
    {SKELETON4, {false, 150, 500, 25, 500, false, 1, 0, LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {REDKNIGHT0, {false, 300, 200, 50, 500, false, 1, 0, LOFIOBJ,8,8,{8*1,8*9,8,8},3,false,false, 32,32,{4,4}, false, QUIET, 0, false}},
    {SHATTERSBOMB, {false, 0,250,25,750,false,24,360,LOFIOBJ4,8,8,{8*1, 8*12,8,8},3,false,true,10,10,{14,14}, false, QUIET, 0, false}},

    {TINYWHITECHICKEN, {false, 500,400,8,450,false,1,1, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false,8,8,{0,10}, false, QUIET, 0, false}},
    {TINYREDCHICKEN, {false, 500,450,8,500,false,1,1, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false,8,8,{0,10}, false, QUIET, 0, false}},
    {COCKATRICE, {false, 500,400,15,650,false,3,24, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false ,12,12,{0,8}, false, QUIET, 0, false}},
    {WHITECHICKEN, {false, 500,400,12,600,false,1,1, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {ROOSTER, {false, 500,750,15,600,false,1,1, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {BIGROOSTER, {false, 500,450,20,500,false,2,12, LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {BIGTURKEY, {false, 500,500,20,500,false,2,12, LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {BOSSCHICKEN, {false, 500,750,25,500,false,3,24, LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {ROBOTURKEY, {false, 1000,666,15,600,false,3,18, LOFIOBJ, 8, 8, {10*8, 8*10, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {ORANGETURKEY, {false, 500,750,12,600,false,1,0, LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {YELLOWTURKEY, {false, 500,1000,12,650,false,1,0, LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {CYANTURKEY, {false, 500,750,12,600,false,1,0, LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    //spriteEnum                             //boxCollEnum, PEC sprite comp

    {ARCMAGE, {false, 1000,5000,55,500,false,5,95, LOFIOBJ3,8,8,{8*1,8*22,8,8},4,false,false,32,32,{4,4}, false, QUIET, 0, false}},

    {HELLHOUND, {false, 500,750,25,600,false,3,24, LOFIOBJ,8,8,{8*0,8*6,8,8},4,false,false,10,10,{14,14}, true, BLEEDING, 3000, false}},
    {IMP0, {false, 500,750,20,600,false,1,1, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {IMP1, {false, 500,750,22,600,false,1,1, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false,12,12,{0,8}, false, QUIET, 0, false}},
    {IMP2, {false, 500,750,24,600,false,1,1, LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false, 8,8,{0,10}, false, QUIET, 0, false}},
    {IMP3, {false, 500,750,15,600,false,3,30, LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true,10,10,{14,14}, false, QUIET, 0, false}},
    {WHITEDEMON, {false, 500,750,45,600,false,5,60, LOFIOBJ,8,8,{8*6,8*6,8,8},4,false,false,10,10,{14,14}, false, QUIET, 0, true}},
    {SKELETON5, {false, 1000,750,15,600,false,36,360, LOFIOBJ,8,8,{8*3,8*6,8,8},4,false,false,10,10,{14,14}, true, CONFUSED, 5000, false}},
    {MOUSE0, {false, 1000,666,5,600,false,1,1, LOFIOBJ,8,8,{8*0,8*7,8,8},4,false,false,10,10,{14,14}, true, QUIET, 5000, false}},
    {BAT0, {false, 1000,666,15,600,false,1,1, LOFIOBJ,8,8,{8*3,8*7,8,8},4,false,false,10,10,{14,14}, true, SLOWED, 5000, false}},
    {SHEEP, {0, 250,0,0,0,0,0,0, LOFIOBJ,0,0,{0*0,0*0,0,0},0,0,0,0,0,{0,0}, 0, SLOWED, 0, 0}},
    {GIGASHEEP, {false, 500,666,35,500,false,3,36, LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false ,12,12,{0,8}, false, SLOWED, 5000, false}},

    {GORDON, {false, 1000,5000,70,500,false,17,360, LOFIOBJ2,8,8,{8*0,8*4,8,8},4,false,false,32,32,{4,4}, false, QUIET, 0, false}},
};


// GIVEN SPRITE ENUM FOR A MONSTER, RETURNS ASSOCIATED STAT DATA and the sounds
std::unordered_map<sprites, statData> spriteEnumToStatData = {
                // currently, loadmonster() doesn't give rigidybodycomp if spd is set to 0
                //hp,mp,att,def,spd,dex,vit,wis
    {SKELETON0, {400,1,1,5,20,1,10,1,SKELETONSHIT,SKELETONSDEATH}},
    {SKELETON1, {450,1,1,10,20,1,10,1,SKELETONSHIT,SKELETONSDEATH}},
    {SKELETON2, {450,1,1,15,20,1,20,1,SKELETONSHIT,SKELETONSDEATH}},
    {SKELETON3, {350,1,1,5,0,1,50,1,SKELETONSHIT,SKELETONSDEATH}}, //mage
    {SKELETON4, {500,1,1,15,35,1,50,1,SKELETONSHIT,SKELETONSDEATH}}, //king
    {REDKNIGHT0, {1000,1,1,40,20,1,30,1, REDKNIGHTHIT, REDKNIGHTDEATH}},
    {SHATTERSBOMB, {0,0,0,0,0,0,0,0,WOODENWALLSHIT,WOODENWALLSDEATH}},

    {TINYWHITECHICKEN, {80,0,0,3,10,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {TINYREDCHICKEN, {80,0,0,3,15,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {WHITECHICKEN, {120,0,0,6,15,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {COCKATRICE, {280,0,0,5,20,0,0,0,GREATERPITSNAKESHIT,GREATERPITSNAKESDEATH}},
    {ROOSTER, {150,0,0,5,10,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {BIGROOSTER, {300,0,0,6,17,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {BIGTURKEY, {300,0,0,7,15,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {BOSSCHICKEN, {4000,0,0,18,30,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {ROBOTURKEY, {600,0,0,10,12,0,0,0,DEMONSHIT,DEMONSDEATH}},
    {ORANGETURKEY, {150,0,0,10,10,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {YELLOWTURKEY, {150,0,0,10,10,0,0,0,CHICKENHIT,CHICKENDEATH}},
    {CYANTURKEY, {150,0,0,5,10,0,0,0,CHICKENHIT,CHICKENDEATH}},
            //hp,mp,att,def,spd,dex,vit,wis
    {ARCMAGE,{25000,0,0,25,55,0,0,0,VOIDHIT,DJINNDEATH}},
    {HELLHOUND,{1250,0,0,30,60,0,40,0,ABYSSBRUTESHIT,ABYSSBRUTESDEATH}},
    {IMP0,{500,0,0,12,20,0,35,0,ABYSSDEMONSHIT,ABYSSDEMONSDEATH}},
    {IMP1,{600,0,0,15,24,0,30,0,ABYSSDEMONSHIT,ABYSSDEMONSDEATH}},
    {IMP2,{600,0,0,15,22,0,40,0,ABYSSDEMONSHIT,ABYSSDEMONSDEATH}},
    {IMP3,{500,0,0,12,24,0,40,0,ABYSSDEMONSHIT,ABYSSDEMONSDEATH}},
    {SKELETON5,{800,0,0,10,10,0,40,0,SKELETONSHIT,SKELETONSDEATH}},
    {WHITEDEMON,{1000,0,0,12,30,0,40,0,DEMONSHIT,DEMONSDEATH}},
    {MOUSE0,{100,0,0,5,20,0,10,0,BATSHIT,BATSDEATH}},
    {BAT0,{250,0,0,5,28,0,20,0,BATSHIT,BATSDEATH}},
    {SHEEP, {3500,0,0,10,35,0,50,0,DEFAULTHIT,DEFAULTDEATH}},
    {GIGASHEEP, {3000,0,0,20,40,0,50,0,SKULLSHRINEHIT,SKULLSHRINEDEATH}},

    {GORDON, {65535,0,0,30,65,0,0,0,ORYXHIT,PALADINDEATH}}
};

// GIVEN BOXCOLLIDER ENUM RETURNS ASSOCIATED BOXCOLLIDER DATA
// copy and paste to spriteEnumToPEC
/*    unsigned short width;
    unsigned short height;
    glm::vec2 offset;*/
std::unordered_map<boxColliders, boxColliderData> bcEnumToData = {
    {STANDARD, {38,18,{6,30}}},
    {MAGIC, {12,12,{0,8}}},
    {BOLT, {10,10,{14,14}}},
    {BLADE, {8,8,{0,10}}},
    {ARROW, {8,8,{16,16}}},
    {CIRCLEMAGIC, {32,32,{4,4}}},
    {SHATTERSBOMBBOX, {32,12,{8,36}}},
    {LOOTBAG, {8*5,8*6,{0,0}}}, // old w = 8*5
    {WIDE, {38*2,18,{6*2,30}}},
    {BIG, {38*2,18*2+12,{6*2,30*2-12}}},
    {STAR, {10,10,{14,14}}},
    {PORTALBOX, {8*6, 8*7, {0,0}}}

};

// GIVEN A SPRITE ENUM, RETURNS THE ASSOCIATE SPRITE COMPONENT DATA
std::unordered_map<sprites, spritedata> enumToSpriteComponent = {
    {REDMAGIC,{LOFIOBJ, 3, 6, {4*8+3, 8*13+1, 3, 6}, 3, false, false}},
    {BLUEMAGIC,{LOFIOBJ, 3, 6, {4*8+3, 8*14, 3, 6}, 3, false, false}},
    {GREENMAGIC,{LOFIOBJ, 3, 6, {12*8+3, 8*13+1, 3, 6}, 3, false, false}},
    {PURPLEMAGIC,{LOFIOBJ, 3, 6, {12*8+3, 8*14, 3, 6}, 3,false, false}},
    {DEFAULTBLADE,{LOFIOBJ, 1, 6, {4*8+4, 8*15, 1, 6}, 3, false, false}},
    {WHITEBOLT,{LOFIOBJ, 8, 8, {10*8, 8*8, 8, 8}, 3, false, true}},
    {REDBOLT,{LOFIOBJ, 8, 8, {10*8, 8*9, 8, 8}, 3,false, true}},
    {GREENBOLT,{LOFIOBJ, 8, 8, {10*8, 8*10, 8, 8}, 3,false, true}},
    {BLUEBOLT,{LOFIOBJ, 8, 8, {10*8, 8*11, 8, 8}, 3,false, true}},
    {PURPLEBOLT,{LOFIOBJ, 8, 8, {10*8, 8*12, 8, 8}, 3,false, true}},
    {GREENARROW,{LOFIPROJS, 8, 8, {8, 8*7, 8, 8}, 3,false, true}},
    {REDARROW,{LOFIPROJS, 8, 8, {8*2, 8*7, 8, 8}, 3,false, true}},
    {BLUEARROW,{LOFIPROJS, 8, 8, {8*3, 8*7, 8, 8}, 3,false, true}},
    {GOLDARROW,{LOFIPROJS, 8, 8, {8*4, 8*7, 8, 8}, 3,false, true}},
    {SKELETON0,{CHAR8X8RHERO1, 8,8, {0,8*1,8,8}, 4, false, false}},
    {SKELETON1,{CHAR8X8RHERO1, 8,8, {0,8*2,8,8}, 4, false, false}},
    {SKELETON2,{CHAR8X8RHERO1, 8,8, {0,8*3,8,8}, 4, false, false}},
    {SKELETON3,{CHAR8X8RHERO1, 8,8, {0,8*4,8,8}, 4, false, false}},
    {SKELETON4,{CHAR8X8RHERO1, 8,8, {0,8*5,8,8}, 4, false, false}},
    {BLACKSLIME,{LOFICHAR, 8,8, {0,8*11,8,8}, 4, false, false}},
    {BROWNSLIME,{LOFICHAR, 8,8, {8*1,8*11,8,8}, 4, false, false}},
    {GREENSLIME,{LOFICHAR, 8,8, {8*2,8*11,8,8}, 4, false, false}},
    {BOBBY, {LOFICHAR, 7,7, {8*6,8*24+1,7,7}, 4, false, false}},
    {REDKNIGHT0, {LOFICHAR,8,8,{8*9,8*0,8,8},4,false,false}},
    {REDCIRCLEMAGIC,{LOFIOBJ,8,8,{8*1,8*9,8,8},3,false,false}},
    {SHATTERSBOMB, {LOFICHAR,8,8,{8*0,8*28,8,8},4,false,false}},
    {BROWNLOOTBAG, {LOFIOBJ4,8,8,{8*0,8*9,8,8},4,false,false}},
    {PURPLELOOTBAG, {LOFIOBJ4,8,8,{8*1,8*9,8,8},4,false,false}},
    {CYANLOOTBAG, {LOFIOBJ4,8,8,{8*2,8*9,8,8},4,false,false}},
    {BLUELOOTBAG, {LOFIOBJ4,8,8,{8*3,8*9,8,8},4,false,false}},
    {WHITELOOTBAG, {LOFIOBJ4,8,8,{8*4,8*9,8,8},4,false,false}},
    {VAULTCHEST, {LOFIOBJ2,8,8,{8*14,8*0,8,8},4,false,false}},
    {REDSTAR, {LOFIOBJ,8,8,{8*0,8*6,8,8},4,false,false}}, // bleeding
    {WHITESTAR, {LOFIOBJ,8,8,{8*6,8*6,8,8},4,false,false}}, // piercing shot
    {BLUESTAR, {LOFIOBJ,8,8,{8*3,8*6,8,8},4,false,false}}, // confuse 
    {REDFIREBALL, {LOFIOBJ3,8,8,{8*1,8*22,8,8},4,false,false}},
    {GREENSTAR, {LOFIOBJ,8,8,{8*3,8*7,8,8},4,false,false}}, // quiet
    {PURPLESTAR, {LOFIOBJ,8,8,{8*0,8*7,8,8},4,false,false}}, // slowed
    {ORYXTEAR, {LOFIOBJ2, 8, 8, {8*1, 8*4, 8,8},4,false,true}},
    {ORYXARROW, {LOFIOBJ3, 8, 8, {8*6, 8*47, 8,8},4,false,false}},

    {TINYWHITECHICKEN,{LOFICHAR, 8,8, {8*7,8*27,8,8}, 4, false, false}},
    {TINYREDCHICKEN,{LOFICHAR, 8,8, {8*6,8*27,8,8}, 4, false, false}},
    {COCKATRICE,{LOFICHAR, 16,8, {8*12,8*15,16,8}, 4, false, false}},
    {WHITECHICKEN,{CHARS8X8ENCOUNTERS, 8,8, {0,8*29,8,8}, 4, false, false}},
    {ROOSTER,{CHARS8X8BEACH, 8,8, {0,8*9,8,8}, 4, false, false}},
    {BIGROOSTER,{CHARS16X16ENCOUNTERS, 16,16, {0,16*2,16,16}, 4, false, false}},
    {BIGTURKEY,{CHARS16X16ENCOUNTERS, 16,16, {0,16*125,16,16}, 4, false, false}},
    {BOSSCHICKEN,{CHARS16X16ENCOUNTERS, 16,16, {0,16*22,16,16}, 4, false, false}},
    {ROBOTURKEY,{CHARS16X16ENCOUNTERS, 16,16, {0,16*135,16,16}, 4, false, false}},
    {ORANGETURKEY,{CHARS8X8ENCOUNTERS, 8,8, {0,8*120,8,8}, 4, false, false}},
    {YELLOWTURKEY,{CHARS8X8ENCOUNTERS, 8,8, {0,8*121,8,8}, 4, false, false}},
    {CYANTURKEY,{CHARS8X8ENCOUNTERS, 8,8, {0,8*122,8,8}, 4, false, false}},

    {ARCMAGE,{CHARS16X16ENCOUNTERS, 16,16, {0,16*110,16,16}, 4, false, false}},
    {HELLHOUND,{CHARS16X16ENCOUNTERS, 16,16, {0,16*21,16,16}, 4, false, false}},
    {IMP0,{CHAR8X8RHERO1, 8,8, {0,8*17,8,8}, 4, false, false}},
    {IMP1,{CHAR8X8RHERO1, 8,8, {0,8*18,8,8}, 4, false, false}},
    {IMP2,{CHAR8X8RHERO1, 8,8, {0,8*19,8,8}, 4, false, false}},
    {IMP3,{CHAR8X8RHERO1, 8,8, {0,8*20,8,8}, 4, false, false}},
    {SKELETON5,{CHAR8X8RHERO1, 8,8, {0,8*6,8,8}, 4, false, false}},
    {WHITEDEMON,{CHARS16X16MOUNTAINS1, 16,16, {0,0,16,16}, 4, false, false}},
    {MOUSE0,{CHARS8X8ENCOUNTERS, 8,8, {0,8*34,8,8}, 4, false, false}},
    {BAT0,{CHARS8X8ENCOUNTERS, 8,8, {0,8*123,8,8}, 4, false, false}},
    {SHEEP,{CHARS8X8BEACH, 8, 8, {0,0,8,8},4,false,false}},
    {GIGASHEEP,{CHARS8X8BEACH, 8, 8, {0,8*1,8,8},4,false,false}},

    {GORDON, {CHARS16X16ENCOUNTERS, 16,16, {0,16*58,16,16}, 4, false, false}},
};

std::unordered_map<classes, spritedata> classToSpriteData = {
    {WARRIOR, {PLAYERS,8,8,{8*0,WARRIOR*24,8,8},4,false,false}},
    {ARCHER, {PLAYERS,8,8,{8*0,ARCHER*24,8,8},4,false,false}},
    {PRIEST, {PLAYERS,8,8,{8*0,PRIEST*24,8,8},4,false,false}}
};

std::unordered_map<sprites, boxColliders> spriteToBC = {
    {SKELETON0, STANDARD},
    {SKELETON1, STANDARD},
    {SKELETON2, STANDARD},
    {SKELETON3, STANDARD},
    {SKELETON4, STANDARD},
    {REDKNIGHT0, STANDARD},
    {REDCIRCLEMAGIC, CIRCLEMAGIC},
    {SHATTERSBOMB, SHATTERSBOMBBOX},
    {TINYWHITECHICKEN, STANDARD},
    {TINYREDCHICKEN, STANDARD},
    {COCKATRICE, WIDE},
    {WHITECHICKEN, STANDARD},
    {ROOSTER, STANDARD},
    {BIGROOSTER, BIG},
    {BIGTURKEY, BIG},
    {BOSSCHICKEN, BIG},
    {ROBOTURKEY, BIG},
    {ORANGETURKEY, STANDARD},
    {YELLOWTURKEY, STANDARD},
    {CYANTURKEY, STANDARD},
    {ARCMAGE,BIG},
    {HELLHOUND,BIG},
    {IMP0,STANDARD},
    {IMP1,STANDARD},
    {IMP2,STANDARD},
    {IMP3,STANDARD},
    {WHITEDEMON,BIG},
    {SKELETON5,STANDARD},
    {MOUSE0, STANDARD},
    {BAT0, STANDARD},
    {GORDON, BIG},
    {SHEEP, STANDARD},
    {GIGASHEEP, BIG},


};

/*    unsigned short detectRange; // distance in pixels where monster can detect player (ex: path to player)
    unsigned short engageRange; // distance where monster will further engage if possible (ex: shoot)
    unsigned short maxDistance; */
std::unordered_map<sprites, aiChaseData> spritesToaiChaseData{
    // not great, but 0 indicates unused variable or one that is derived later from somewhere else
    {SKELETON0, {400, 0, 100}},
    {SKELETON1, {400, 0, 100}},
    {SKELETON2, {400, 0, 100}},
    {SKELETON3, {0, 0, 0}},
    {SKELETON4, {400, 0, 100}},
    {REDKNIGHT0, {150, 0, 50}},
    {TINYWHITECHICKEN, {400,0,95}},
    {TINYREDCHICKEN, {400,0,105}},
    {COCKATRICE, {600,0,100}},
    {WHITECHICKEN, {400,0,50}},
    {ROOSTER, {600,0,80}},
    {BIGROOSTER, {600,0,120}},
    {BIGTURKEY, {600,0,100}},
    {BOSSCHICKEN, {750,0,5}},
    {ROBOTURKEY, {500,0,100}},
    {ORANGETURKEY, {600,0,50}},
    {YELLOWTURKEY, {600,0,100}},
    {CYANTURKEY, {600,0,100}},
    {SKELETON5, {750,0,1}},
    {WHITEDEMON, {500, 0, 120}},
    {ARCMAGE, {750, 0, 5}},
    {HELLHOUND,{600,400,50}}, //POUNCE AI
    {IMP0,{600,0,95}},
    {IMP1,{600,0,120}},
    {IMP2,{600,0,80}},
    {IMP3,{600,0,100}},
    {MOUSE0,{600,0,150}},
    {BAT0,{600,0,150}},
    {GORDON, {750,0,5}},
    {GIGASHEEP, {1000,0,120}}

};
/*    unsigned short detectRange; // distance in pixels where monster can detect player (ex: path to player)
    unsigned short engageRange; // distance where monster will further engage if possible (ex: shoot)
    unsigned short shootRange; 
    std::vector<int> speeds; 
    int cooldown;*/
std::unordered_map<sprites, AnimatedPounceAIdata> spritesToPounceData = {
    {HELLHOUND,{600,400,100,{15,25,85}, 2500}}, //POUNCE AI
};


std::unordered_map<sprites, trapaidata> spritetotrap = {
    {SHATTERSBOMB, {200, 7}}
};


std::unordered_map<sprites, animationData> spriteToAnimationData = {
    {SKELETON0, {3,0,0}},
    {SKELETON1, {3,0,0}},
    {SKELETON2, {3,0,0}},
    {SKELETON3, {3,0,0}},
    {SKELETON4, {3,0,0}},
    {SKELETON5, {3,0,0}},
    {SHATTERSBOMB, {1,4,0}}, // old duration was 3500 ms for the bomb
    {TINYWHITECHICKEN, {3,0,0}},
    {TINYREDCHICKEN, {3,0,0}},
    {COCKATRICE, {3,0,0}},
    {WHITECHICKEN, {3,0,0}},
    {ROOSTER, {3,0,0}},
    {BIGROOSTER, {3,0,0}},
    {BIGTURKEY, {3,0,0}},
    {BOSSCHICKEN, {3,0,0}},
    {ROBOTURKEY, {3,0,0}},
    {ORANGETURKEY, {3,0,0}},
    {YELLOWTURKEY, {3,0,0}},
    {CYANTURKEY, {3,0,0}},
    {ARCMAGE, {3,0,0}},
    {HELLHOUND, {3,0,0}},
    {IMP0, {3,0,0}},
    {IMP1, {3,0,0}},
    {IMP2, {3,0,0}},
    {IMP3, {3,0,0}},
    {WHITEDEMON, {3,0,0}},
    {MOUSE0, {3,0,0}},
    {BAT0, {3,0,0}},
    {GORDON, {2,0,0}},
    {SHEEP, {3,0,0}},
    {GIGASHEEP, {3,0,0}}
};
